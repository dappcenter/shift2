{"ast":null,"code":"var _jsxFileName = \"/Volumes/ssd500/Answers/answers/src/components/Menu/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport { allLanguages } from 'config/localisation/languageCodes';\nimport { LanguageContext } from 'contexts/Localisation/languageContext';\nimport useTheme from 'hooks/useTheme';\nimport useAuth from 'hooks/useAuth';\nimport { usePriceCakeBusd, useProfile } from 'state/hooks';\nimport config from './config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Menu = props => {\n  _s();\n\n  const {\n    account\n  } = useWeb3React();\n  const {\n    login,\n    logout\n  } = useAuth();\n  const {\n    selectedLanguage,\n    setSelectedLanguage\n  } = useContext(LanguageContext);\n  const {\n    isDark,\n    toggleTheme\n  } = useTheme();\n  const cakePriceUsd = usePriceCakeBusd();\n  const {\n    profile\n  } = useProfile();\n  return /*#__PURE__*/_jsxDEV(UikitMenu, {\n    account: account,\n    login: login,\n    logout: logout,\n    isDark: isDark // toggleTheme={toggleTheme}\n    ,\n    currentLang: selectedLanguage && selectedLanguage.code,\n    langs: allLanguages,\n    setLang: setSelectedLanguage // cakePriceUsd={cakePriceUsd.toNumber()}\n    ,\n    links: config // profile={{\n    //   username: profile?.username,\n    //   image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n    //   profileLink: '/profile',\n    //   noProfileLink: '/profile',\n    //   showPip: !profile?.username,\n    // }}\n    ,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Menu, \"c/P7biRFpjR3fR7eyCQN470yhSA=\", false, function () {\n  return [useWeb3React, useAuth, useTheme, usePriceCakeBusd, useProfile];\n});\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/Volumes/ssd500/Answers/answers/src/components/Menu/index.tsx"],"names":["React","useContext","Menu","UikitMenu","useWeb3React","allLanguages","LanguageContext","useTheme","useAuth","usePriceCakeBusd","useProfile","config","props","account","login","logout","selectedLanguage","setSelectedLanguage","isDark","toggleTheme","cakePriceUsd","profile","code"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,IAAI,IAAIC,SAAjB,QAAkC,yBAAlC;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,YAAT,QAA6B,mCAA7B;AACA,SAASC,eAAT,QAAgC,uCAAhC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,aAA7C;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMT,IAAI,GAAIU,KAAD,IAAW;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAcT,YAAY,EAAhC;AACA,QAAM;AAAEU,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBP,OAAO,EAAjC;AACA,QAAM;AAAEQ,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAA4ChB,UAAU,CAACK,eAAD,CAA5D;AACA,QAAM;AAAEY,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA0BZ,QAAQ,EAAxC;AACA,QAAMa,YAAY,GAAGX,gBAAgB,EAArC;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAcX,UAAU,EAA9B;AAEA,sBACE,QAAC,SAAD;AACE,IAAA,OAAO,EAAEG,OADX;AAEE,IAAA,KAAK,EAAEC,KAFT;AAGE,IAAA,MAAM,EAAEC,MAHV;AAIE,IAAA,MAAM,EAAEG,MAJV,CAKE;AALF;AAME,IAAA,WAAW,EAAEF,gBAAgB,IAAIA,gBAAgB,CAACM,IANpD;AAOE,IAAA,KAAK,EAAEjB,YAPT;AAQE,IAAA,OAAO,EAAEY,mBARX,CASE;AATF;AAUE,IAAA,KAAK,EAAEN,MAVT,CAWE;AACA;AACA;AACA;AACA;AACA;AACA;AAjBF;AAAA,OAkBMC;AAlBN;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA9BD;;GAAMV,I;UACgBE,Y,EACMI,O,EAEMD,Q,EACXE,gB,EACDC,U;;;KANhBR,I;AAgCN,eAAeA,IAAf","sourcesContent":["import React, { useContext } from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport useAuth from 'hooks/useAuth'\nimport { usePriceCakeBusd, useProfile } from 'state/hooks'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account } = useWeb3React()\n  const { login, logout } = useAuth()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { profile } = useProfile()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={login}\n      logout={logout}\n      isDark={isDark}\n      // toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      // cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config}\n      // profile={{\n      //   username: profile?.username,\n      //   image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n      //   profileLink: '/profile',\n      //   noProfileLink: '/profile',\n      //   showPip: !profile?.username,\n      // }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n"]},"metadata":{},"sourceType":"module"}