{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/rp/Desktop/shift2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"/Users/rp/Desktop/shift2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _templateObject;import React,{useState,useMemo}from\"react\";import{Route,useRouteMatch}from\"react-router-dom\";import BigNumber from\"bignumber.js\";import styled from\"styled-components\";import{useWeb3React}from\"@web3-react/core\";import{Heading}from\"@pancakeswap-libs/uikit\";import orderBy from\"lodash/orderBy\";import partition from\"lodash/partition\";import useI18n from\"hooks/useI18n\";import{usePools,useBlock}from\"state/hooks\";import FlexLayout from\"components/layout/Flex\";import Page from\"components/layout/Page\";import PoolCard from\"./components/PoolCard\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Farm=function Farm(){var _useRouteMatch=useRouteMatch(),path=_useRouteMatch.path;var TranslateString=useI18n();var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var pools=usePools(account);var _useBlock=useBlock(),blockNumber=_useBlock.blockNumber;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),stackedOnly=_useState2[0],setStackedOnly=_useState2[1];var _useMemo=useMemo(function(){return partition(pools,function(pool){return pool.isFinished||blockNumber>pool.endBlock;});},[blockNumber,pools]),_useMemo2=_slicedToArray(_useMemo,2),finishedPools=_useMemo2[0],openPools=_useMemo2[1];var stackedOnlyPools=useMemo(function(){return openPools.filter(function(pool){return pool.userData&&new BigNumber(pool.userData.stakedBalance).isGreaterThan(0);});},[openPools]);return/*#__PURE__*/_jsxs(Page,{children:[/*#__PURE__*/_jsx(Hero,{children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Heading,{as:\"h2\",size:\"xxl\",mb:\"16px\",children:TranslateString(738,\"SHIFT POOL\")})})}),/*#__PURE__*/_jsxs(FlexLayout,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"\".concat(path),children:/*#__PURE__*/_jsx(_Fragment,{children:stackedOnly?orderBy(stackedOnlyPools,[\"sortOrder\"]).map(function(pool){return/*#__PURE__*/_jsx(PoolCard,{pool:pool},pool.sousId);}):orderBy(openPools,[\"sortOrder\"]).map(function(pool){return/*#__PURE__*/_jsx(PoolCard,{pool:pool},pool.sousId);})})}),/*#__PURE__*/_jsx(Route,{path:\"\".concat(path,\"/history\"),children:orderBy(finishedPools,[\"sortOrder\"]).map(function(pool){return/*#__PURE__*/_jsx(PoolCard,{pool:pool},pool.sousId);})})]})]});};var Hero=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  color: \",\";\\n  display: grid;\\n  grid-gap: 32px;\\n  grid-template-columns: 1fr;\\n  margin-left: auto;\\n  margin-right: auto;\\n  max-width: 250px;\\n  padding: 48px 0;\\n  ul {\\n    margin: 0;\\n    padding: 0;\\n    list-style-type: none;\\n    font-size: 16px;\\n    li {\\n      margin-bottom: 4px;\\n    }\\n  }\\n  img {\\n    height: auto;\\n    max-width: 100%;\\n  }\\n  @media (min-width: 576px) {\\n    grid-template-columns: 1fr 1fr;\\n    margin: 0;\\n    max-width: none;\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.primary;});export default Farm;","map":{"version":3,"sources":["/Users/rp/Desktop/shift2/src/views/Pools/Syrup.tsx"],"names":["React","useState","useMemo","Route","useRouteMatch","BigNumber","styled","useWeb3React","Heading","orderBy","partition","useI18n","usePools","useBlock","FlexLayout","Page","PoolCard","Farm","path","TranslateString","account","pools","blockNumber","stackedOnly","setStackedOnly","pool","isFinished","endBlock","finishedPools","openPools","stackedOnlyPools","filter","userData","stakedBalance","isGreaterThan","map","sousId","Hero","div","theme","colors","primary"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from \"react\";\nimport { Route, useRouteMatch } from \"react-router-dom\";\nimport BigNumber from \"bignumber.js\";\nimport styled from \"styled-components\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { Heading } from \"@pancakeswap-libs/uikit\";\nimport orderBy from \"lodash/orderBy\";\nimport partition from \"lodash/partition\";\nimport useI18n from \"hooks/useI18n\";\nimport { usePools, useBlock } from \"state/hooks\";\nimport FlexLayout from \"components/layout/Flex\";\nimport Page from \"components/layout/Page\";\nimport Coming from \"./components/Coming\";\nimport PoolCard from \"./components/PoolCard\";\nimport PoolTabButtons from \"./components/PoolTabButtons\";\nimport Divider from \"./components/Divider\";\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch();\n  const TranslateString = useI18n();\n  const { account } = useWeb3React();\n  const pools = usePools(account);\n  const { blockNumber } = useBlock();\n  const [stackedOnly, setStackedOnly] = useState(false);\n\n  const [finishedPools, openPools] = useMemo(\n    () =>\n      partition(\n        pools,\n        (pool) => pool.isFinished || blockNumber > pool.endBlock\n      ),\n    [blockNumber, pools]\n  );\n  const stackedOnlyPools = useMemo(\n    () =>\n      openPools.filter(\n        (pool) =>\n          pool.userData &&\n          new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      ),\n    [openPools]\n  );\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <Heading as=\"h2\" size=\"xxl\" mb=\"16px\">\n            {TranslateString(738, \"SHIFT POOL\")}\n          </Heading>\n        </div>\n      </Hero>\n      {/* <PoolTabButtons stackedOnly={stackedOnly} setStackedOnly={setStackedOnly} /> */}\n\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {stackedOnly\n              ? orderBy(stackedOnlyPools, [\"sortOrder\"]).map((pool) => (\n                  <PoolCard key={pool.sousId} pool={pool} />\n                ))\n              : orderBy(openPools, [\"sortOrder\"]).map((pool) => (\n                  <PoolCard key={pool.sousId} pool={pool} />\n                ))}\n            {/* <Coming /> */}\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, [\"sortOrder\"]).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  );\n};\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`;\n\nexport default Farm;\n"]},"metadata":{},"sourceType":"module"}