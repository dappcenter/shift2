{"ast":null,"code":"import _taggedTemplateLiteral from\"/Volumes/evo970/mega/answers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React from'react';import styled from'styled-components';import{useFarmUser}from'state/hooks';import useI18n from'hooks/useI18n';import{Text,Image}from'@pancakeswap-libs/uikit';import{getBalanceNumber}from'utils/formatBalance';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var IconImage=styled(Image)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 24px;\\n  height: 24px;\\n\\n  \",\" {\\n    width: 40px;\\n    height: 40px;\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.mediaQueries.sm;});var Container=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  padding-left: 16px;\\n  display: flex;\\n  align-items: center;\\n\\n  \",\" {\\n    padding-left: 32px;\\n  }\\n\"])),function(_ref2){var theme=_ref2.theme;return theme.mediaQueries.sm;});var Farm=function Farm(_ref3){var image=_ref3.image,label=_ref3.label,pid=_ref3.pid;var _useFarmUser=useFarmUser(pid),stakedBalance=_useFarmUser.stakedBalance;var TranslateString=useI18n();var rawStakedBalance=getBalanceNumber(stakedBalance);var handleRenderFarming=function handleRenderFarming(){if(rawStakedBalance){return/*#__PURE__*/_jsx(Text,{color:\"secondary\",fontSize:\"12px\",bold:true,children:TranslateString(999,'FARMING')});}return null;};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(IconImage,{src:\"/images/farms/\".concat(image,\".svg\"),alt:\"icon\",width:40,height:40,mr:\"8px\"}),/*#__PURE__*/_jsxs(\"div\",{children:[handleRenderFarming(),/*#__PURE__*/_jsx(Text,{bold:true,children:label})]})]});};export default Farm;","map":{"version":3,"sources":["/Volumes/evo970/mega/answers/src/views/Farms/components/FarmTable/Farm.tsx"],"names":["React","styled","useFarmUser","useI18n","Text","Image","getBalanceNumber","IconImage","theme","mediaQueries","sm","Container","div","Farm","image","label","pid","stakedBalance","TranslateString","rawStakedBalance","handleRenderFarming"],"mappings":"wMAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,OAASC,IAAT,CAAeC,KAAf,KAA4B,yBAA5B,CACA,OAASC,gBAAT,KAAiC,qBAAjC,C,wFAQA,GAAMC,CAAAA,SAAS,CAAGN,MAAM,CAACI,KAAD,CAAT,yJAIX,kBAAGG,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,YAAN,CAAmBC,EAAlC,EAJW,CAAf,CAUA,GAAMC,CAAAA,SAAS,CAAGV,MAAM,CAACW,GAAV,+KAKX,mBAAGJ,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,YAAN,CAAmBC,EAAlC,EALW,CAAf,CAUA,GAAMG,CAAAA,IAAwC,CAAG,QAA3CA,CAAAA,IAA2C,OAA2B,IAAxBC,CAAAA,KAAwB,OAAxBA,KAAwB,CAAjBC,KAAiB,OAAjBA,KAAiB,CAAVC,GAAU,OAAVA,GAAU,kBAChDd,WAAW,CAACc,GAAD,CADqC,CAClEC,aADkE,cAClEA,aADkE,CAE1E,GAAMC,CAAAA,eAAe,CAAGf,OAAO,EAA/B,CACA,GAAMgB,CAAAA,gBAAgB,CAAGb,gBAAgB,CAACW,aAAD,CAAzC,CAEA,GAAMG,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAmB,CAC7C,GAAID,gBAAJ,CAAsB,CACpB,mBACE,KAAC,IAAD,EAAM,KAAK,CAAC,WAAZ,CAAwB,QAAQ,CAAC,MAAjC,CAAwC,IAAI,KAA5C,UACGD,eAAe,CAAC,GAAD,CAAM,SAAN,CADlB,EADF,CAKD,CAED,MAAO,KAAP,CACD,CAVD,CAYA,mBACE,MAAC,SAAD,yBACE,KAAC,SAAD,EAAW,GAAG,yBAAmBJ,KAAnB,QAAd,CAA8C,GAAG,CAAC,MAAlD,CAAyD,KAAK,CAAE,EAAhE,CAAoE,MAAM,CAAE,EAA5E,CAAgF,EAAE,CAAC,KAAnF,EADF,cAEE,uBACGM,mBAAmB,EADtB,cAEE,KAAC,IAAD,EAAM,IAAI,KAAV,UAAYL,KAAZ,EAFF,GAFF,GADF,CASD,CA1BD,CA4BA,cAAeF,CAAAA,IAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useFarmUser } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { Text, Image } from '@pancakeswap-libs/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\n\nexport interface FarmProps {\n  label: string\n  pid: number\n  image: string\n}\n\nconst IconImage = styled(Image)`\n  width: 24px;\n  height: 24px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 40px;\n    height: 40px;\n  }\n`\n\nconst Container = styled.div`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`\n\nconst Farm: React.FunctionComponent<FarmProps> = ({ image, label, pid }) => {\n  const { stakedBalance } = useFarmUser(pid)\n  const TranslateString = useI18n()\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n\n  const handleRenderFarming = (): JSX.Element => {\n    if (rawStakedBalance) {\n      return (\n        <Text color=\"secondary\" fontSize=\"12px\" bold>\n          {TranslateString(999, 'FARMING')}\n        </Text>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <Container>\n      <IconImage src={`/images/farms/${image}.svg`} alt=\"icon\" width={40} height={40} mr=\"8px\" />\n      <div>\n        {handleRenderFarming()}\n        <Text bold>{label}</Text>\n      </div>\n    </Container>\n  )\n}\n\nexport default Farm\n"]},"metadata":{},"sourceType":"module"}