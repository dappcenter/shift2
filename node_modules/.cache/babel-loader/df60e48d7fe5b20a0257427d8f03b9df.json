{"ast":null,"code":"export var QuoteToken;(function(QuoteToken){QuoteToken[\"BNB\"]=\"BNB\";QuoteToken[\"CAKE\"]=\"SHIFT\";QuoteToken[\"SYRUP\"]=\"SYRUP\";QuoteToken[\"BUSD\"]=\"BUSD\";QuoteToken[\"TWT\"]=\"TWT\";QuoteToken[\"UST\"]=\"UST\";QuoteToken[\"ETH\"]=\"ETH\";QuoteToken[\"COMP\"]=\"COMP\";QuoteToken[\"SUSHI\"]=\"SUSHI\";QuoteToken[\"TPT\"]=\"TPT\";QuoteToken[\"SHIFT\"]=\"SHIFT\";})(QuoteToken||(QuoteToken={}));export var PoolCategory;(function(PoolCategory){PoolCategory[\"COMMUNITY\"]=\"Community\";PoolCategory[\"CORE\"]=\"Core\";PoolCategory[\"BINANCE\"]=\"Binance\";})(PoolCategory||(PoolCategory={}));","map":{"version":3,"sources":["/Users/rp/Desktop/shift2/src/config/constants/types.ts"],"names":["QuoteToken","PoolCategory"],"mappings":"AAyBA,UAAYA,CAAAA,UAAZ,C,UAAYA,U,EAAAA,U,cAAAA,U,iBAAAA,U,kBAAAA,U,gBAAAA,U,cAAAA,U,cAAAA,U,cAAAA,U,gBAAAA,U,kBAAAA,U,cAAAA,U,qBAAAA,U,GAAAA,U,MAcZ,UAAYC,CAAAA,YAAZ,C,UAAYA,Y,EAAAA,Y,0BAAAA,Y,gBAAAA,Y,yBAAAA,Y,GAAAA,Y","sourcesContent":["import { TranslatableText } from \"state/types\";\n\nexport type IfoStatus = \"idle\" | \"coming_soon\" | \"live\" | \"finished\";\n\nexport interface Ifo {\n  id: string;\n  isActive: boolean;\n  address: string;\n  name: string;\n  subTitle?: string;\n  description?: string;\n  launchDate: string;\n  launchTime: string;\n  saleAmount: string;\n  raiseAmount: string;\n  cakeToBurn: string;\n  projectSiteUrl: string;\n  currency: string;\n  currencyAddress: string;\n  tokenDecimals: number;\n  tokenSymbol: string;\n  releaseBlockNumber: number;\n  campaignId?: string;\n}\n\nexport enum QuoteToken {\n  \"BNB\" = \"BNB\",\n  \"CAKE\" = \"SHIFT\",\n  \"SYRUP\" = \"SYRUP\",\n  \"BUSD\" = \"BUSD\",\n  \"TWT\" = \"TWT\",\n  \"UST\" = \"UST\",\n  \"ETH\" = \"ETH\",\n  \"COMP\" = \"COMP\",\n  \"SUSHI\" = \"SUSHI\",\n  \"TPT\" = \"TPT\",\n  \"SHIFT\" = \"SHIFT\",\n}\n\nexport enum PoolCategory {\n  \"COMMUNITY\" = \"Community\",\n  \"CORE\" = \"Core\",\n  \"BINANCE\" = \"Binance\", // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string;\n  56: string;\n}\n\nexport interface FarmConfig {\n  pid: number;\n  lpSymbol: string;\n  lpAddresses: Address;\n  tokenSymbol: string;\n  tokenAddresses: Address;\n  quoteTokenSymbol: QuoteToken;\n  quoteTokenAdresses: Address;\n  multiplier?: string;\n  isCommunity?: boolean;\n  dual?: {\n    rewardPerBlock: number;\n    earnLabel: string;\n    endBlock: number;\n  };\n}\n\nexport interface PoolConfig {\n  sousId: number;\n  tokenName: string;\n  tokenAddress: string;\n  stakingTokenName: QuoteToken;\n  stakingLimit?: number;\n  stakingTokenAddress?: string;\n  stakingTokenDecimals?: number;\n  contractAddress: Address;\n  poolCategory: PoolCategory;\n  projectLink: string;\n  tokenPerBlock: string;\n  sortOrder?: number;\n  harvest?: boolean;\n  isFinished?: boolean;\n  tokenDecimals: number;\n}\n\nexport type Images = {\n  lg: string;\n  md: string;\n  sm: string;\n  ipfs?: string;\n};\n\nexport type NftImages = {\n  blur?: string;\n} & Images;\n\nexport type NftVideo = {\n  webm: string;\n  mp4: string;\n};\n\nexport type Nft = {\n  name: string;\n  description: string;\n  images: NftImages;\n  sortOrder: number;\n  bunnyId: number;\n  video?: NftVideo;\n};\n\nexport type TeamImages = {\n  alt: string;\n} & Images;\n\nexport type Team = {\n  id: number;\n  name: string;\n  description: string;\n  isJoinable?: boolean;\n  users: number;\n  points: number;\n  images: TeamImages;\n  background: string;\n  textColor: string;\n};\n\nexport type CampaignType = \"ifo\";\n\nexport type Campaign = {\n  id: string;\n  type: CampaignType;\n  title?: TranslatableText;\n  description?: TranslatableText;\n  badge?: string;\n};\n"]},"metadata":{},"sourceType":"module"}