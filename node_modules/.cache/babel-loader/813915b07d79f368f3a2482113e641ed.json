{"ast":null,"code":"import _objectSpread from\"/Users/rp/Desktop/shift2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useContext}from\"react\";import{Menu as UikitMenu}from\"@pancakeswap-libs/uikit\";import{useWeb3React}from\"@web3-react/core\";import{allLanguages}from\"config/localisation/languageCodes\";import{LanguageContext}from\"contexts/Localisation/languageContext\";import useTheme from\"hooks/useTheme\";import useAuth from\"hooks/useAuth\";import{usePriceCakeBusd,useProfile}from\"state/hooks\";import config from\"./config\";import{jsx as _jsx}from\"react/jsx-runtime\";var Menu=function Menu(props){var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useAuth=useAuth(),login=_useAuth.login,logout=_useAuth.logout;var _useContext=useContext(LanguageContext),selectedLanguage=_useContext.selectedLanguage,setSelectedLanguage=_useContext.setSelectedLanguage;var _useTheme=useTheme(),isDark=_useTheme.isDark,toggleTheme=_useTheme.toggleTheme;var cakePriceUsd=usePriceCakeBusd();var _useProfile=useProfile(),profile=_useProfile.profile;return/*#__PURE__*/_jsx(UikitMenu,_objectSpread({account:account,login:login,logout:logout,isDark:isDark// toggleTheme={toggleTheme}\n,currentLang:selectedLanguage&&selectedLanguage.code,langs:allLanguages,setLang:setSelectedLanguage// cakePriceUsd={cakePriceUsd.toNumber()}\n,links:config// profile={{\n//   username: profile?.username,\n//   image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n//   profileLink: '/profile',\n//   noProfileLink: '/profile',\n//   showPip: !profile?.username,\n// }}\n},props));};export default Menu;","map":{"version":3,"sources":["/Users/rp/Desktop/shift2/src/components/Menu/index.tsx"],"names":["React","useContext","Menu","UikitMenu","useWeb3React","allLanguages","LanguageContext","useTheme","useAuth","usePriceCakeBusd","useProfile","config","props","account","login","logout","selectedLanguage","setSelectedLanguage","isDark","toggleTheme","cakePriceUsd","profile","code"],"mappings":"8IAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,IAAI,GAAIC,CAAAA,SAAjB,KAAkC,yBAAlC,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,OAASC,YAAT,KAA6B,mCAA7B,CACA,OAASC,eAAT,KAAgC,uCAAhC,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,OAASC,gBAAT,CAA2BC,UAA3B,KAA6C,aAA7C,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,C,2CAEA,GAAMT,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACU,KAAD,CAAW,mBACFR,YAAY,EADV,CACdS,OADc,eACdA,OADc,cAEIL,OAAO,EAFX,CAEdM,KAFc,UAEdA,KAFc,CAEPC,MAFO,UAEPA,MAFO,iBAG4Bd,UAAU,CAACK,eAAD,CAHtC,CAGdU,gBAHc,aAGdA,gBAHc,CAGIC,mBAHJ,aAGIA,mBAHJ,eAIUV,QAAQ,EAJlB,CAIdW,MAJc,WAIdA,MAJc,CAINC,WAJM,WAINA,WAJM,CAKtB,GAAMC,CAAAA,YAAY,CAAGX,gBAAgB,EAArC,CALsB,gBAMFC,UAAU,EANR,CAMdW,OANc,aAMdA,OANc,CAQtB,mBACE,KAAC,SAAD,gBACE,OAAO,CAAER,OADX,CAEE,KAAK,CAAEC,KAFT,CAGE,MAAM,CAAEC,MAHV,CAIE,MAAM,CAAEG,MACR;AALF,CAME,WAAW,CAAEF,gBAAgB,EAAIA,gBAAgB,CAACM,IANpD,CAOE,KAAK,CAAEjB,YAPT,CAQE,OAAO,CAAEY,mBACT;AATF,CAUE,KAAK,CAAEN,MACP;AACA;AACA;AACA;AACA;AACA;AACA;AAjBF,EAkBMC,KAlBN,EADF,CAsBD,CA9BD,CAgCA,cAAeV,CAAAA,IAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { Menu as UikitMenu } from \"@pancakeswap-libs/uikit\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { allLanguages } from \"config/localisation/languageCodes\";\nimport { LanguageContext } from \"contexts/Localisation/languageContext\";\nimport useTheme from \"hooks/useTheme\";\nimport useAuth from \"hooks/useAuth\";\nimport { usePriceCakeBusd, useProfile } from \"state/hooks\";\nimport config from \"./config\";\n\nconst Menu = (props) => {\n  const { account } = useWeb3React();\n  const { login, logout } = useAuth();\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext);\n  const { isDark, toggleTheme } = useTheme();\n  const cakePriceUsd = usePriceCakeBusd();\n  const { profile } = useProfile();\n\n  return (\n    <UikitMenu\n      account={account}\n      login={login}\n      logout={logout}\n      isDark={isDark}\n      // toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      // cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config}\n      // profile={{\n      //   username: profile?.username,\n      //   image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n      //   profileLink: '/profile',\n      //   noProfileLink: '/profile',\n      //   showPip: !profile?.username,\n      // }}\n      {...props}\n    />\n  );\n};\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}