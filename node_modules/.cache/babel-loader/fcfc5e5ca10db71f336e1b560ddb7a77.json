{"ast":null,"code":"import _taggedTemplateLiteral from\"/Volumes/evo970/mega/answers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React from'react';import{Card,CardBody,Heading,Text}from'@pancakeswap-libs/uikit';import styled from'styled-components';import{getBalanceNumber}from'utils/formatBalance';import{useTotalSupply,useBurnedBalance}from'hooks/useTokenBalance';import useI18n from'hooks/useI18n';import{getCakeAddress}from'utils/addressHelpers';import CardValue from'./CardValue';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledCakeStats=styled(Card)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  margin-left: auto;\\n  margin-right: auto;\\n\"])));var Row=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  display: flex;\\n  font-size: 14px;\\n  justify-content: space-between;\\n  margin-bottom: 8px;\\n\"])));var CakeStats=function CakeStats(){var TranslateString=useI18n();var totalSupply=useTotalSupply();var burnedBalance=getBalanceNumber(useBurnedBalance(getCakeAddress()));var cakeSupply=totalSupply?getBalanceNumber(totalSupply)-burnedBalance:0;return/*#__PURE__*/_jsx(StyledCakeStats,{children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Heading,{size:\"xl\",mb:\"24px\",children:TranslateString(534,'? Stats')}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:TranslateString(536,'Total ? Supply')}),cakeSupply&&/*#__PURE__*/_jsx(CardValue,{fontSize:\"14px\",value:cakeSupply})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:TranslateString(538,'Total ? Burned')}),/*#__PURE__*/_jsx(CardValue,{fontSize:\"14px\",decimals:0,value:burnedBalance})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:TranslateString(540,'New ?/block')}),/*#__PURE__*/_jsx(CardValue,{fontSize:\"14px\",decimals:0,value:8})]})]})});};export default CakeStats;","map":{"version":3,"sources":["/Volumes/evo970/mega/answers/src/views/Home/components/CakeStats.tsx"],"names":["React","Card","CardBody","Heading","Text","styled","getBalanceNumber","useTotalSupply","useBurnedBalance","useI18n","getCakeAddress","CardValue","StyledCakeStats","Row","div","CakeStats","TranslateString","totalSupply","burnedBalance","cakeSupply"],"mappings":"wMAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,QAAf,CAAyBC,OAAzB,CAAkCC,IAAlC,KAA8C,yBAA9C,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,gBAAT,KAAiC,qBAAjC,CACA,OAASC,cAAT,CAAyBC,gBAAzB,KAAiD,uBAAjD,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,OAASC,cAAT,KAA+B,sBAA/B,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,C,wFAEA,GAAMC,CAAAA,eAAe,CAAGP,MAAM,CAACJ,IAAD,CAAT,gHAArB,CAKA,GAAMY,CAAAA,GAAG,CAAGR,MAAM,CAACS,GAAV,6LAAT,CAQA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,GAAMC,CAAAA,eAAe,CAAGP,OAAO,EAA/B,CACA,GAAMQ,CAAAA,WAAW,CAAGV,cAAc,EAAlC,CACA,GAAMW,CAAAA,aAAa,CAAGZ,gBAAgB,CAACE,gBAAgB,CAACE,cAAc,EAAf,CAAjB,CAAtC,CACA,GAAMS,CAAAA,UAAU,CAAGF,WAAW,CAAGX,gBAAgB,CAACW,WAAD,CAAhB,CAAgCC,aAAnC,CAAmD,CAAjF,CAEA,mBACE,KAAC,eAAD,wBACE,MAAC,QAAD,yBACE,KAAC,OAAD,EAAS,IAAI,CAAC,IAAd,CAAmB,EAAE,CAAC,MAAtB,UACGF,eAAe,CAAC,GAAD,CAAM,SAAN,CADlB,EADF,cAIE,MAAC,GAAD,yBACE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,UAAuBA,eAAe,CAAC,GAAD,CAAM,gBAAN,CAAtC,EADF,CAEGG,UAAU,eAAI,KAAC,SAAD,EAAW,QAAQ,CAAC,MAApB,CAA2B,KAAK,CAAEA,UAAlC,EAFjB,GAJF,cAQE,MAAC,GAAD,yBACE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,UAAuBH,eAAe,CAAC,GAAD,CAAM,gBAAN,CAAtC,EADF,cAEE,KAAC,SAAD,EAAW,QAAQ,CAAC,MAApB,CAA2B,QAAQ,CAAE,CAArC,CAAwC,KAAK,CAAEE,aAA/C,EAFF,GARF,cAYE,MAAC,GAAD,yBACE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,UAAuBF,eAAe,CAAC,GAAD,CAAM,aAAN,CAAtC,EADF,cAEE,KAAC,SAAD,EAAW,QAAQ,CAAC,MAApB,CAA2B,QAAQ,CAAE,CAArC,CAAwC,KAAK,CAAE,CAA/C,EAFF,GAZF,GADF,EADF,CAqBD,CA3BD,CA6BA,cAAeD,CAAAA,SAAf","sourcesContent":["import React from 'react'\r\nimport { Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport CardValue from './CardValue'\r\n\r\nconst StyledCakeStats = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 14px;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst CakeStats = () => {\r\n  const TranslateString = useI18n()\r\n  const totalSupply = useTotalSupply()\r\n  const burnedBalance = getBalanceNumber(useBurnedBalance(getCakeAddress()))\r\n  const cakeSupply = totalSupply ? getBalanceNumber(totalSupply) - burnedBalance : 0\r\n\r\n  return (\r\n    <StyledCakeStats>\r\n      <CardBody>\r\n        <Heading size=\"xl\" mb=\"24px\">\r\n          {TranslateString(534, '? Stats')}\r\n        </Heading>\r\n        <Row>\r\n          <Text fontSize=\"14px\">{TranslateString(536, 'Total ? Supply')}</Text>\r\n          {cakeSupply && <CardValue fontSize=\"14px\" value={cakeSupply} />}\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\">{TranslateString(538, 'Total ? Burned')}</Text>\r\n          <CardValue fontSize=\"14px\" decimals={0} value={burnedBalance} />\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\">{TranslateString(540, 'New ?/block')}</Text>\r\n          <CardValue fontSize=\"14px\" decimals={0} value={8} />\r\n        </Row>\r\n      </CardBody>\r\n    </StyledCakeStats>\r\n  )\r\n}\r\n\r\nexport default CakeStats\r\n"]},"metadata":{},"sourceType":"module"}