{"ast":null,"code":"import _regeneratorRuntime from\"/Users/rp/Desktop/shift2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/rp/Desktop/shift2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/Users/rp/Desktop/shift2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Users/rp/Desktop/shift2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';import{useWeb3React}from'@web3-react/core';import{getBunnySpecialContract}from'utils/contractHelpers';export var BULL_NFT=11;export var HICCUP_NFT=10;var bunnySpecialContract=getBunnySpecialContract();var useGetBullHiccupClaimableStatus=function useGetBullHiccupClaimableStatus(){var _useState5;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),hasChecked=_useState2[0],setHasChecked=_useState2[1];var _useState3=useState((_useState5={},_defineProperty(_useState5,BULL_NFT,false),_defineProperty(_useState5,HICCUP_NFT,false),_useState5)),_useState4=_slicedToArray(_useState3,2),claimables=_useState4[0],setClaimables=_useState4[1];var _useWeb3React=useWeb3React(),account=_useWeb3React.account;useEffect(function(){var checkClaimableStatus=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _setClaimables;var _ref2,_ref3,isBullClaimable,isHiccupClaimable;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return bunnySpecialContract.methods.canClaimMultiple(account,[BULL_NFT,HICCUP_NFT]).call();case 2:_ref2=_context.sent;_ref3=_slicedToArray(_ref2,2);isBullClaimable=_ref3[0];isHiccupClaimable=_ref3[1];setClaimables((_setClaimables={},_defineProperty(_setClaimables,BULL_NFT,isBullClaimable),_defineProperty(_setClaimables,HICCUP_NFT,isHiccupClaimable),_setClaimables));setHasChecked(true);case 8:case\"end\":return _context.stop();}}},_callee);}));return function checkClaimableStatus(){return _ref.apply(this,arguments);};}();if(account){checkClaimableStatus();}},[account,setClaimables,setHasChecked]);return{isSomeClaimable:Object.values(claimables).some(function(status){return status===true;}),isBullClaimable:claimables[BULL_NFT],isHiccupClaimable:claimables[HICCUP_NFT],hasChecked:hasChecked};};export default useGetBullHiccupClaimableStatus;","map":{"version":3,"sources":["/Users/rp/Desktop/shift2/src/views/Collectibles/hooks/useGetBullHiccupClaimableStatus.ts"],"names":["useEffect","useState","useWeb3React","getBunnySpecialContract","BULL_NFT","HICCUP_NFT","bunnySpecialContract","useGetBullHiccupClaimableStatus","hasChecked","setHasChecked","claimables","setClaimables","account","checkClaimableStatus","methods","canClaimMultiple","call","isBullClaimable","isHiccupClaimable","isSomeClaimable","Object","values","some","status"],"mappings":"2jBAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,OAASC,uBAAT,KAAwC,uBAAxC,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,EAAjB,CACP,MAAO,IAAMC,CAAAA,UAAU,CAAG,EAAnB,CAEP,GAAMC,CAAAA,oBAAoB,CAAGH,uBAAuB,EAApD,CAEA,GAAMI,CAAAA,+BAA+B,CAAG,QAAlCA,CAAAA,+BAAkC,EAAM,8BACRN,QAAQ,CAAC,KAAD,CADA,wCACrCO,UADqC,eACzBC,aADyB,8BAERR,QAAQ,2CACzCG,QADyC,CAC9B,KAD8B,6BAEzCC,UAFyC,CAE5B,KAF4B,cAFA,yCAErCK,UAFqC,eAEzBC,aAFyB,iCAMxBT,YAAY,EANY,CAMpCU,OANoC,eAMpCA,OANoC,CAQ5CZ,SAAS,CAAC,UAAM,CACd,GAAMa,CAAAA,oBAAoB,0FAAG,8NACyBP,CAAAA,oBAAoB,CAACQ,OAArB,CACjDC,gBADiD,CAChCH,OADgC,CACvB,CAACR,QAAD,CAAWC,UAAX,CADuB,EAEjDW,IAFiD,EADzB,0DACpBC,eADoB,UACHC,iBADG,UAK3BP,aAAa,mDACVP,QADU,CACCa,eADD,iCAEVZ,UAFU,CAEGa,iBAFH,kBAAb,CAIAT,aAAa,CAAC,IAAD,CAAb,CAT2B,sDAAH,kBAApBI,CAAAA,oBAAoB,0CAA1B,CAYA,GAAID,OAAJ,CAAa,CACXC,oBAAoB,GACrB,CACF,CAhBQ,CAgBN,CAACD,OAAD,CAAUD,aAAV,CAAyBF,aAAzB,CAhBM,CAAT,CAkBA,MAAO,CACLU,eAAe,CAAEC,MAAM,CAACC,MAAP,CAAcX,UAAd,EAA0BY,IAA1B,CAA+B,SAACC,MAAD,QAAYA,CAAAA,MAAM,GAAK,IAAvB,EAA/B,CADZ,CAELN,eAAe,CAAEP,UAAU,CAACN,QAAD,CAFtB,CAGLc,iBAAiB,CAAER,UAAU,CAACL,UAAD,CAHxB,CAILG,UAAU,CAAVA,UAJK,CAAP,CAMD,CAhCD,CAkCA,cAAeD,CAAAA,+BAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBunnySpecialContract } from 'utils/contractHelpers'\n\nexport const BULL_NFT = 11\nexport const HICCUP_NFT = 10\n\nconst bunnySpecialContract = getBunnySpecialContract()\n\nconst useGetBullHiccupClaimableStatus = () => {\n  const [hasChecked, setHasChecked] = useState(false)\n  const [claimables, setClaimables] = useState({\n    [BULL_NFT]: false,\n    [HICCUP_NFT]: false,\n  })\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const checkClaimableStatus = async () => {\n      const [isBullClaimable, isHiccupClaimable] = (await bunnySpecialContract.methods\n        .canClaimMultiple(account, [BULL_NFT, HICCUP_NFT])\n        .call()) as boolean[]\n\n      setClaimables({\n        [BULL_NFT]: isBullClaimable,\n        [HICCUP_NFT]: isHiccupClaimable,\n      })\n      setHasChecked(true)\n    }\n\n    if (account) {\n      checkClaimableStatus()\n    }\n  }, [account, setClaimables, setHasChecked])\n\n  return {\n    isSomeClaimable: Object.values(claimables).some((status) => status === true),\n    isBullClaimable: claimables[BULL_NFT],\n    isHiccupClaimable: claimables[HICCUP_NFT],\n    hasChecked,\n  }\n}\n\nexport default useGetBullHiccupClaimableStatus\n"]},"metadata":{},"sourceType":"module"}