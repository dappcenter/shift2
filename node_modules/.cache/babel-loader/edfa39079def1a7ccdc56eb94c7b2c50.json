{"ast":null,"code":"import _slicedToArray from\"/Users/rp/Desktop/shift2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/rp/Desktop/shift2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _defineProperty from\"/Users/rp/Desktop/shift2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _tags,_templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7;import React,{useState}from\"react\";import styled from\"styled-components\";import{getBalanceNumber}from\"utils/formatBalance\";import useI18n from\"hooks/useI18n\";import{ChevronDown,ChevronUp}from\"react-feather\";import{Flex,MetamaskIcon}from\"@pancakeswap-libs/uikit\";import Balance from\"components/Balance\";import{CommunityTag,CoreTag,BinanceTag}from\"components/Tags\";import{useBlock}from\"state/hooks\";import{PoolCategory}from\"config/constants/types\";import{registerToken}from\"utils/wallet\";import{BASE_URL}from\"config\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var tags=(_tags={},_defineProperty(_tags,PoolCategory.BINANCE,BinanceTag),_defineProperty(_tags,PoolCategory.CORE,CoreTag),_defineProperty(_tags,PoolCategory.COMMUNITY,CommunityTag),_tags);var StyledFooter=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  border-top: 1px solid \",\";\\n  color: \",\";\\n  padding: 24px;\\n\"])),function(_ref){var theme=_ref.theme;return theme.isDark?\"#524B63\":\"#E9EAEB\";},function(_ref2){var isFinished=_ref2.isFinished,theme=_ref2.theme;return theme.colors[isFinished?\"textDisabled2\":\"primary2\"];});var StyledDetailsButton=styled.button(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  background-color: transparent;\\n  border: 0;\\n  color: \",\";\\n  cursor: pointer;\\n  display: inline-flex;\\n  font-size: 16px;\\n  font-weight: 600;\\n  height: 32px;\\n  justify-content: center;\\n  outline: 0;\\n  padding: 0;\\n  &:hover {\\n    opacity: 0.9;\\n  }\\n\\n  & > svg {\\n    margin-left: 4px;\\n  }\\n\"])),function(props){return props.theme.colors.primary;});var Details=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  margin-top: 24px;\\n\"])));var Row=styled(Flex)(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  align-items: center;\\n\"])));var FlexFull=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  flex: 1;\\n\"])));var Label=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  font-size: 14px;\\n\"])));var TokenLink=styled.a(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  font-size: 14px;\\n  text-decoration: none;\\n  color: \",\";\\n  cursor: pointer;\\n\"])),function(props){return props.theme.colors.primary;});var CardFooter=function CardFooter(_ref3){var projectLink=_ref3.projectLink,decimals=_ref3.decimals,tokenAddress=_ref3.tokenAddress,totalStaked=_ref3.totalStaked,tokenName=_ref3.tokenName,tokenDecimals=_ref3.tokenDecimals,isFinished=_ref3.isFinished,startBlock=_ref3.startBlock,endBlock=_ref3.endBlock,poolCategory=_ref3.poolCategory;var _useBlock=useBlock(),currentBlock=_useBlock.blockNumber;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1];var TranslateString=useI18n();var Icon=isOpen?ChevronUp:ChevronDown;var handleClick=function handleClick(){return setIsOpen(!isOpen);};var Tag=tags[poolCategory];var blocksUntilStart=Math.max(startBlock-currentBlock,0);var blocksRemaining=Math.max(endBlock-currentBlock,0);var imageSrc=\"\".concat(BASE_URL,\"/images/tokens/\").concat(tokenName.toLowerCase(),\".png\");return/*#__PURE__*/_jsxs(StyledFooter,{isFinished:isFinished,children:[/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(FlexFull,{children:/*#__PURE__*/_jsx(Tag,{})}),/*#__PURE__*/_jsxs(StyledDetailsButton,{onClick:handleClick,children:[isOpen?TranslateString(1066,\"Hide\"):TranslateString(658,\"Details\"),\" \",/*#__PURE__*/_jsx(Icon,{})]})]}),isOpen&&/*#__PURE__*/_jsxs(Details,{children:[/*#__PURE__*/_jsxs(Row,{mb:\"4px\",children:[/*#__PURE__*/_jsx(FlexFull,{children:/*#__PURE__*/_jsx(Label,{children:TranslateString(408,\"Total\")})}),/*#__PURE__*/_jsx(Balance,{fontSize:\"14px\",isDisabled:isFinished,value:getBalanceNumber(totalStaked,decimals)})]}),blocksUntilStart>0&&/*#__PURE__*/_jsxs(Row,{mb:\"4px\",children:[/*#__PURE__*/_jsx(FlexFull,{children:/*#__PURE__*/_jsxs(Label,{children:[TranslateString(410,\"Start\"),\":\"]})}),/*#__PURE__*/_jsx(Balance,{fontSize:\"14px\",isDisabled:isFinished,value:blocksUntilStart,decimals:0})]}),blocksUntilStart===0&&blocksRemaining>0&&/*#__PURE__*/_jsxs(Row,{mb:\"4px\",children:[/*#__PURE__*/_jsx(FlexFull,{children:/*#__PURE__*/_jsxs(Label,{children:[TranslateString(410,\"End\"),\":\"]})}),/*#__PURE__*/_jsx(Balance,{fontSize:\"14px\",isDisabled:isFinished,value:blocksRemaining,decimals:0})]}),/*#__PURE__*/_jsxs(Flex,{mb:\"4px\",children:[/*#__PURE__*/_jsxs(TokenLink,{onClick:function onClick(){return registerToken(tokenAddress,tokenName,tokenDecimals,imageSrc);},children:[\"Add \",tokenName,\" to Metamask\"]}),/*#__PURE__*/_jsx(MetamaskIcon,{height:15,width:15,ml:\"4px\"})]}),/*#__PURE__*/_jsx(TokenLink,{href:projectLink,target:\"_blank\",children:TranslateString(412,\"View project site\")})]})]});};export default/*#__PURE__*/React.memo(CardFooter);","map":{"version":3,"sources":["/Users/rp/Desktop/shift2/src/views/Pools/components/CardFooter.tsx"],"names":["React","useState","styled","getBalanceNumber","useI18n","ChevronDown","ChevronUp","Flex","MetamaskIcon","Balance","CommunityTag","CoreTag","BinanceTag","useBlock","PoolCategory","registerToken","BASE_URL","tags","BINANCE","CORE","COMMUNITY","StyledFooter","div","theme","isDark","isFinished","colors","StyledDetailsButton","button","props","primary","Details","Row","FlexFull","Label","TokenLink","a","CardFooter","projectLink","decimals","tokenAddress","totalStaked","tokenName","tokenDecimals","startBlock","endBlock","poolCategory","currentBlock","blockNumber","isOpen","setIsOpen","TranslateString","Icon","handleClick","Tag","blocksUntilStart","Math","max","blocksRemaining","imageSrc","toLowerCase","memo"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport BigNumber from \"bignumber.js\";\nimport styled from \"styled-components\";\nimport { getBalanceNumber } from \"utils/formatBalance\";\nimport useI18n from \"hooks/useI18n\";\nimport { ChevronDown, ChevronUp } from \"react-feather\";\nimport { Flex, MetamaskIcon } from \"@pancakeswap-libs/uikit\";\nimport Balance from \"components/Balance\";\nimport { CommunityTag, CoreTag, BinanceTag } from \"components/Tags\";\nimport { useBlock } from \"state/hooks\";\nimport { PoolCategory } from \"config/constants/types\";\nimport { registerToken } from \"utils/wallet\";\nimport { BASE_URL } from \"config\";\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n};\n\ninterface Props {\n  projectLink: string;\n  decimals: number;\n  totalStaked: BigNumber;\n  tokenName: string;\n  tokenAddress: string;\n  tokenDecimals: number;\n  startBlock: number;\n  endBlock: number;\n  isFinished: boolean;\n  poolCategory: PoolCategory;\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? \"#524B63\" : \"#E9EAEB\")};\n  color: ${({ isFinished, theme }) =>\n    theme.colors[isFinished ? \"textDisabled2\" : \"primary2\"]};\n  padding: 24px;\n`;\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`;\n\nconst Details = styled.div`\n  margin-top: 24px;\n`;\n\nconst Row = styled(Flex)`\n  align-items: center;\n`;\n\nconst FlexFull = styled.div`\n  flex: 1;\n`;\nconst Label = styled.div`\n  font-size: 14px;\n`;\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n`;\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  decimals,\n  tokenAddress,\n  totalStaked,\n  tokenName,\n  tokenDecimals,\n  isFinished,\n  startBlock,\n  endBlock,\n  poolCategory,\n}) => {\n  const { blockNumber: currentBlock } = useBlock();\n  const [isOpen, setIsOpen] = useState(false);\n  const TranslateString = useI18n();\n  const Icon = isOpen ? ChevronUp : ChevronDown;\n\n  const handleClick = () => setIsOpen(!isOpen);\n  const Tag = tags[poolCategory];\n\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0);\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0);\n\n  const imageSrc = `${BASE_URL}/images/tokens/${tokenName.toLowerCase()}.png`;\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen\n            ? TranslateString(1066, \"Hide\")\n            : TranslateString(658, \"Details\")}{\" \"}\n          <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row mb=\"4px\">\n            <FlexFull>\n              <Label>\n                {/* <span role=\"img\" aria-label=\"syrup\">\n                  🥞{' '}\n                </span> */}\n                {TranslateString(408, \"Total\")}\n              </Label>\n            </FlexFull>\n            <Balance\n              fontSize=\"14px\"\n              isDisabled={isFinished}\n              value={getBalanceNumber(totalStaked, decimals)}\n            />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row mb=\"4px\">\n              <FlexFull>\n                <Label>{TranslateString(410, \"Start\")}:</Label>\n              </FlexFull>\n              <Balance\n                fontSize=\"14px\"\n                isDisabled={isFinished}\n                value={blocksUntilStart}\n                decimals={0}\n              />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row mb=\"4px\">\n              <FlexFull>\n                <Label>{TranslateString(410, \"End\")}:</Label>\n              </FlexFull>\n              <Balance\n                fontSize=\"14px\"\n                isDisabled={isFinished}\n                value={blocksRemaining}\n                decimals={0}\n              />\n            </Row>\n          )}\n          <Flex mb=\"4px\">\n            <TokenLink\n              onClick={() =>\n                registerToken(tokenAddress, tokenName, tokenDecimals, imageSrc)\n              }\n            >\n              Add {tokenName} to Metamask\n            </TokenLink>\n            <MetamaskIcon height={15} width={15} ml=\"4px\" />\n          </Flex>\n          <TokenLink href={projectLink} target=\"_blank\">\n            {TranslateString(412, \"View project site\")}\n          </TokenLink>\n        </Details>\n      )}\n    </StyledFooter>\n  );\n};\n\nexport default React.memo(CardFooter);\n"]},"metadata":{},"sourceType":"module"}