{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/rp/Desktop/death/quest/answers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React from'react';import styled from'styled-components';import{Text,Button,Input,Flex,Link}from'@pancakeswap-libs/uikit';import useI18n from'../../hooks/useI18n';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var getBoxShadow=function getBoxShadow(_ref){var _ref$isWarning=_ref.isWarning,isWarning=_ref$isWarning===void 0?false:_ref$isWarning,theme=_ref.theme;if(isWarning){return theme.shadows.warning;}return theme.shadows.inset;};var StyledTokenInput=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  background-color: \",\";\\n  border-radius: 16px;\\n  box-shadow: \",\";\\n  color: \",\";\\n  padding: 8px 16px 8px 0;\\n  width: 100%;\\n\"])),function(_ref2){var theme=_ref2.theme;return theme.colors.input;},getBoxShadow,function(_ref3){var theme=_ref3.theme;return theme.colors.text;});var StyledInput=styled(Input)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  box-shadow: none;\\n  width: 60px;\\n  margin: 0 8px;\\n  padding: 0 8px;\\n\\n  \",\" {\\n    width: 80px;\\n  }\\n\\n  \",\" {\\n    width: auto;\\n  }\\n\"])),function(_ref4){var theme=_ref4.theme;return theme.mediaQueries.xs;},function(_ref5){var theme=_ref5.theme;return theme.mediaQueries.sm;});var StyledErrorMessage=styled(Text)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  bottom: -22px;\\n  a {\\n    display: inline;\\n  }\\n\"])));var ModalInput=function ModalInput(_ref6){var max=_ref6.max,symbol=_ref6.symbol,onChange=_ref6.onChange,onSelectMax=_ref6.onSelectMax,value=_ref6.value,addLiquidityUrl=_ref6.addLiquidityUrl,inputTitle=_ref6.inputTitle;var TranslateString=useI18n();var isBalanceZero=max==='0'||!max;var displayBalance=isBalanceZero?'0':parseFloat(max).toFixed(4);return/*#__PURE__*/_jsxs(\"div\",{style:{position:'relative'},children:[/*#__PURE__*/_jsxs(StyledTokenInput,{isWarning:isBalanceZero,children:[/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",pl:\"16px\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:inputTitle}),/*#__PURE__*/_jsxs(Text,{fontSize:\"14px\",children:[TranslateString(1120,'Balance'),\": \",displayBalance.toLocaleString()]})]}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"flex-end\",justifyContent:\"space-around\",children:[/*#__PURE__*/_jsx(StyledInput,{onChange:onChange,placeholder:\"0\",value:value}),/*#__PURE__*/_jsx(Button,{scale:\"sm\",onClick:onSelectMax,mr:\"8px\",children:TranslateString(452,'Max')}),/*#__PURE__*/_jsx(Text,{fontSize:\"16px\",children:symbol})]})]}),isBalanceZero&&/*#__PURE__*/_jsxs(StyledErrorMessage,{fontSize:\"14px\",color:\"failure\",children:[\"No tokens to stake:\",' ',/*#__PURE__*/_jsxs(Link,{fontSize:\"14px\",bold:false,href:addLiquidityUrl,external:true,color:\"failure\",children:[TranslateString(999,'get'),\" \",symbol]})]})]});};export default ModalInput;","map":{"version":3,"sources":["/Users/rp/Desktop/death/quest/answers/src/components/ModalInput/ModalInput.tsx"],"names":["React","styled","Text","Button","Input","Flex","Link","useI18n","getBoxShadow","isWarning","theme","shadows","warning","inset","StyledTokenInput","div","colors","input","text","StyledInput","mediaQueries","xs","sm","StyledErrorMessage","ModalInput","max","symbol","onChange","onSelectMax","value","addLiquidityUrl","inputTitle","TranslateString","isBalanceZero","displayBalance","parseFloat","toFixed","position","toLocaleString"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, Input, InputProps, Flex, Link } from '@pancakeswap-libs/uikit'\nimport useI18n from '../../hooks/useI18n'\n\ninterface ModalInputProps {\n  max: string\n  symbol: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n}\n\nconst getBoxShadow = ({ isWarning = false, theme }) => {\n  if (isWarning) {\n    return theme.shadows.warning\n  }\n\n  return theme.shadows.inset\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  box-shadow: ${getBoxShadow};\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  width: 60px;\n  margin: 0 8px;\n  padding: 0 8px;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nconst StyledErrorMessage = styled(Text)`\n  position: absolute;\n  bottom: -22px;\n  a {\n    display: inline;\n  }\n`\n\nconst ModalInput: React.FC<ModalInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  addLiquidityUrl,\n  inputTitle,\n}) => {\n  const TranslateString = useI18n()\n  const isBalanceZero = max === '0' || !max\n\n  const displayBalance = isBalanceZero ? '0' : parseFloat(max).toFixed(4)\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\">{inputTitle}</Text>\n          <Text fontSize=\"14px\">\n            {TranslateString(1120, 'Balance')}: {displayBalance.toLocaleString()}\n          </Text>\n        </Flex>\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\n          <StyledInput onChange={onChange} placeholder=\"0\" value={value} />\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\n            {TranslateString(452, 'Max')}\n          </Button>\n          <Text fontSize=\"16px\">{symbol}</Text>\n        </Flex>\n      </StyledTokenInput>\n      {isBalanceZero && (\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\n          No tokens to stake:{' '}\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\n            {TranslateString(999, 'get')} {symbol}\n          </Link>\n        </StyledErrorMessage>\n      )}\n    </div>\n  )\n}\n\nexport default ModalInput\n"]},"metadata":{},"sourceType":"module"}