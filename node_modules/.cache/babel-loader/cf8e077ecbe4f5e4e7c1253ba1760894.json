{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/shift2-fcb8bc041d1fedb7988290b70457fa426765e2f4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _defineProperty from\"/Volumes/evo970/shift2-fcb8bc041d1fedb7988290b70457fa426765e2f4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Volumes/evo970/shift2-fcb8bc041d1fedb7988290b70457fa426765e2f4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Volumes/evo970/shift2-fcb8bc041d1fedb7988290b70457fa426765e2f4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";/* eslint-disable no-param-reassign */import{createAsyncThunk,createSlice}from'@reduxjs/toolkit';var initialState={isLoading:false,lastUpdated:null,data:null};// Thunks\nexport var fetchPrices=createAsyncThunk('prices/fetch',/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('https://api.pancakeswap.info/api/v2/tokens');case 2:response=_context.sent;_context.next=5;return response.json();case 5:data=_context.sent;console.log(' ** SUCK IT****  ');// Return normalized token names\nreturn _context.abrupt(\"return\",{update_at:data.update_at,prices:Object.keys(data.prices).reduce(function(accum,token){return _objectSpread(_objectSpread({},accum),{},_defineProperty({},token.toLowerCase(),data.prices[token]));},{})});case 8:case\"end\":return _context.stop();}}},_callee);})));export var pricesSlice=createSlice({name:'prices',initialState:initialState,reducers:{},extraReducers:function extraReducers(builder){builder.addCase(fetchPrices.pending,function(state){state.isLoading=true;});builder.addCase(fetchPrices.fulfilled,function(state,action){state.isLoading=false;state.lastUpdated=action.payload.update_at;state.data=action.payload.prices;});}});export default pricesSlice.reducer;","map":{"version":3,"sources":["/Volumes/evo970/shift2-fcb8bc041d1fedb7988290b70457fa426765e2f4/src/state/prices/index.ts"],"names":["createAsyncThunk","createSlice","initialState","isLoading","lastUpdated","data","fetchPrices","fetch","response","json","console","log","update_at","prices","Object","keys","reduce","accum","token","toLowerCase","pricesSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","reducer"],"mappings":"stBAAA,sCACA,OAASA,gBAAT,CAA2BC,WAA3B,KAA6D,kBAA7D,CAGA,GAAMC,CAAAA,YAAwB,CAAG,CAC/BC,SAAS,CAAE,KADoB,CAE/BC,WAAW,CAAE,IAFkB,CAG/BC,IAAI,CAAE,IAHyB,CAAjC,CAMA;AACA,MAAO,IAAMC,CAAAA,WAAW,CAAGN,gBAAgB,CAAmB,cAAnB,sEAAmC,2KACrDO,CAAAA,KAAK,CAAC,4CAAD,CADgD,QACtEC,QADsE,qCAExDA,CAAAA,QAAQ,CAACC,IAAT,EAFwD,QAEtEJ,IAFsE,eAG5EK,OAAO,CAACC,GAAR,CAAY,mBAAZ,EACA;AAJ4E,gCAKrE,CACLC,SAAS,CAAEP,IAAI,CAACO,SADX,CAELC,MAAM,CAAEC,MAAM,CAACC,IAAP,CAAYV,IAAI,CAACQ,MAAjB,EAAyBG,MAAzB,CAAgC,SAACC,KAAD,CAAQC,KAAR,CAAkB,CACxD,sCACKD,KADL,wBAEGC,KAAK,CAACC,WAAN,EAFH,CAEyBd,IAAI,CAACQ,MAAL,CAAYK,KAAZ,CAFzB,GAID,CALO,CAKL,EALK,CAFH,CALqE,wDAAnC,GAApC,CAgBP,MAAO,IAAME,CAAAA,WAAW,CAAGnB,WAAW,CAAC,CACrCoB,IAAI,CAAE,QAD+B,CAErCnB,YAAY,CAAZA,YAFqC,CAGrCoB,QAAQ,CAAE,EAH2B,CAIrCC,aAAa,CAAE,uBAACC,OAAD,CAAa,CAC1BA,OAAO,CAACC,OAAR,CAAgBnB,WAAW,CAACoB,OAA5B,CAAqC,SAACC,KAAD,CAAW,CAC9CA,KAAK,CAACxB,SAAN,CAAkB,IAAlB,CACD,CAFD,EAGAqB,OAAO,CAACC,OAAR,CAAgBnB,WAAW,CAACsB,SAA5B,CAAuC,SAACD,KAAD,CAAQE,MAAR,CAAoD,CACzFF,KAAK,CAACxB,SAAN,CAAkB,KAAlB,CACAwB,KAAK,CAACvB,WAAN,CAAoByB,MAAM,CAACC,OAAP,CAAelB,SAAnC,CACAe,KAAK,CAACtB,IAAN,CAAawB,MAAM,CAACC,OAAP,CAAejB,MAA5B,CACD,CAJD,EAKD,CAboC,CAAD,CAA/B,CAgBP,cAAeO,CAAAA,WAAW,CAACW,OAA3B","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { PriceApiResponse, PriceState } from 'state/types'\n\nconst initialState: PriceState = {\n  isLoading: false,\n  lastUpdated: null,\n  data: null,\n}\n\n// Thunks\nexport const fetchPrices = createAsyncThunk<PriceApiResponse>('prices/fetch', async () => {\n  const response = await fetch('https://api.pancakeswap.info/api/v2/tokens')\n  const data = (await response.json()) as PriceApiResponse\n  console.log(' ** SUCK IT****  ')\n  // Return normalized token names\n  return {\n    update_at: data.update_at,\n    prices: Object.keys(data.prices).reduce((accum, token) => {\n      return {\n        ...accum,\n        [token.toLowerCase()]: data.prices[token],\n      }\n    }, {}),\n  }\n})\n\nexport const pricesSlice = createSlice({\n  name: 'prices',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchPrices.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchPrices.fulfilled, (state, action: PayloadAction<PriceApiResponse>) => {\n      state.isLoading = false\n      state.lastUpdated = action.payload.update_at\n      state.data = action.payload.prices\n    })\n  },\n})\n\nexport default pricesSlice.reducer\n"]},"metadata":{},"sourceType":"module"}