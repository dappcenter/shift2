{"ast":null,"code":"var _jsxFileName = \"/Users/rp/Desktop/death/answers/src/views/Farms/components/FarmTable/Farm.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useFarmUser } from 'state/hooks';\nimport useI18n from 'hooks/useI18n';\nimport { Text, Image } from '@pancakeswap-libs/uikit';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IconImage = styled(Image)`\n  width: 24px;\n  height: 24px;\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    width: 40px;\n    height: 40px;\n  }\n`;\n_c = IconImage;\nconst Container = styled.div`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`;\n_c2 = Container;\n\nconst Farm = ({\n  image,\n  label,\n  pid\n}) => {\n  _s();\n\n  const {\n    stakedBalance\n  } = useFarmUser(pid);\n  const TranslateString = useI18n();\n  const rawStakedBalance = getBalanceNumber(stakedBalance);\n\n  const handleRenderFarming = () => {\n    if (rawStakedBalance) {\n      return /*#__PURE__*/_jsxDEV(Text, {\n        color: \"secondary\",\n        fontSize: \"12px\",\n        bold: true,\n        children: TranslateString(999, 'FARMING')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n    }\n\n    return null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(IconImage, {\n      src: `/images/farms/${image}.svg`,\n      alt: \"icon\",\n      width: 40,\n      height: 40,\n      mr: \"8px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [handleRenderFarming(), /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Farm, \"s6v7ooEjRhMcXkj2QJH5c3TZvzg=\", false, function () {\n  return [useFarmUser, useI18n];\n});\n\n_c3 = Farm;\nexport default Farm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"IconImage\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Farm\");","map":{"version":3,"sources":["/Users/rp/Desktop/death/answers/src/views/Farms/components/FarmTable/Farm.tsx"],"names":["React","styled","useFarmUser","useI18n","Text","Image","getBalanceNumber","IconImage","theme","mediaQueries","sm","Container","div","Farm","image","label","pid","stakedBalance","TranslateString","rawStakedBalance","handleRenderFarming"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,yBAA5B;AACA,SAASC,gBAAT,QAAiC,qBAAjC;;AAQA,MAAMC,SAAS,GAAGN,MAAM,CAACI,KAAD,CAAQ;AAChC;AACA;AACA;AACA,IAAI,CAAC;AAAEG,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,YAAN,CAAmBC,EAAG;AACzC;AACA;AACA;AACA,CARA;KAAMH,S;AAUN,MAAMI,SAAS,GAAGV,MAAM,CAACW,GAAI;AAC7B;AACA;AACA;AACA;AACA,IAAI,CAAC;AAAEJ,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,YAAN,CAAmBC,EAAG;AACzC;AACA;AACA,CARA;MAAMC,S;;AAUN,MAAME,IAAwC,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA;AAAhB,CAAD,KAA2B;AAAA;;AAC1E,QAAM;AAAEC,IAAAA;AAAF,MAAoBf,WAAW,CAACc,GAAD,CAArC;AACA,QAAME,eAAe,GAAGf,OAAO,EAA/B;AACA,QAAMgB,gBAAgB,GAAGb,gBAAgB,CAACW,aAAD,CAAzC;;AAEA,QAAMG,mBAAmB,GAAG,MAAmB;AAC7C,QAAID,gBAAJ,EAAsB;AACpB,0BACE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAC,WAAZ;AAAwB,QAAA,QAAQ,EAAC,MAAjC;AAAwC,QAAA,IAAI,MAA5C;AAAA,kBACGD,eAAe,CAAC,GAAD,EAAM,SAAN;AADlB;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;;AAED,WAAO,IAAP;AACD,GAVD;;AAYA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,GAAG,EAAG,iBAAgBJ,KAAM,MAAvC;AAA8C,MAAA,GAAG,EAAC,MAAlD;AAAyD,MAAA,KAAK,EAAE,EAAhE;AAAoE,MAAA,MAAM,EAAE,EAA5E;AAAgF,MAAA,EAAE,EAAC;AAAnF;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,iBACGM,mBAAmB,EADtB,eAEE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,kBAAYL;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA1BD;;GAAMF,I;UACsBX,W,EACFC,O;;;MAFpBU,I;AA4BN,eAAeA,IAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useFarmUser } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { Text, Image } from '@pancakeswap-libs/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\n\nexport interface FarmProps {\n  label: string\n  pid: number\n  image: string\n}\n\nconst IconImage = styled(Image)`\n  width: 24px;\n  height: 24px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 40px;\n    height: 40px;\n  }\n`\n\nconst Container = styled.div`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`\n\nconst Farm: React.FunctionComponent<FarmProps> = ({ image, label, pid }) => {\n  const { stakedBalance } = useFarmUser(pid)\n  const TranslateString = useI18n()\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n\n  const handleRenderFarming = (): JSX.Element => {\n    if (rawStakedBalance) {\n      return (\n        <Text color=\"secondary\" fontSize=\"12px\" bold>\n          {TranslateString(999, 'FARMING')}\n        </Text>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <Container>\n      <IconImage src={`/images/farms/${image}.svg`} alt=\"icon\" width={40} height={40} mr=\"8px\" />\n      <div>\n        {handleRenderFarming()}\n        <Text bold>{label}</Text>\n      </div>\n    </Container>\n  )\n}\n\nexport default Farm\n"]},"metadata":{},"sourceType":"module"}