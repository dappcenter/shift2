{"ast":null,"code":"import _regeneratorRuntime from\"/Users/rp/Desktop/shift2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/rp/Desktop/shift2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useCallback}from'react';import{useWeb3React,UnsupportedChainIdError}from'@web3-react/core';import{useToast}from'state/hooks';import{connectorsByName}from'utils/web3React';import{setupNetwork}from'utils/wallet';var useAuth=function useAuth(){var _useWeb3React=useWeb3React(),activate=_useWeb3React.activate,deactivate=_useWeb3React.deactivate;var _useToast=useToast(),toastError=_useToast.toastError;var login=useCallback(function(connectorID){var connector=connectorsByName[connectorID];if(connector){activate(connector,/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(error){var hasSetup;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(error instanceof UnsupportedChainIdError)){_context.next=7;break;}_context.next=3;return setupNetwork();case 3:hasSetup=_context.sent;if(hasSetup){activate(connector);}_context.next=8;break;case 7:toastError(error.name,error.message);case 8:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());}else{toastError(\"Can't find connector\",'The connector config is wrong');}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);return{login:login,logout:deactivate};};export default useAuth;","map":{"version":3,"sources":["/Users/rp/Desktop/shift2/src/hooks/useAuth.ts"],"names":["useCallback","useWeb3React","UnsupportedChainIdError","useToast","connectorsByName","setupNetwork","useAuth","activate","deactivate","toastError","login","connectorID","connector","error","hasSetup","name","message","logout"],"mappings":"2RAAA,OAASA,WAAT,KAA4B,OAA5B,CACA,OAASC,YAAT,CAAuBC,uBAAvB,KAAsD,kBAAtD,CAEA,OAASC,QAAT,KAAyB,aAAzB,CACA,OAASC,gBAAT,KAAiC,iBAAjC,CACA,OAASC,YAAT,KAA6B,cAA7B,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,mBACaL,YAAY,EADzB,CACZM,QADY,eACZA,QADY,CACFC,UADE,eACFA,UADE,eAEGL,QAAQ,EAFX,CAEZM,UAFY,WAEZA,UAFY,CAIpB,GAAMC,CAAAA,KAAK,CAAGV,WAAW,CAAC,SAACW,WAAD,CAAiC,CACzD,GAAMC,CAAAA,SAAS,CAAGR,gBAAgB,CAACO,WAAD,CAAlC,CACA,GAAIC,SAAJ,CAAe,CACbL,QAAQ,CAACK,SAAD,0FAAY,iBAAOC,KAAP,oIACdA,KAAK,WAAYX,CAAAA,uBADH,gDAEOG,CAAAA,YAAY,EAFnB,QAEVS,QAFU,eAGhB,GAAIA,QAAJ,CAAc,CACZP,QAAQ,CAACK,SAAD,CAAR,CACD,CALe,6BAOhBH,UAAU,CAACI,KAAK,CAACE,IAAP,CAAaF,KAAK,CAACG,OAAnB,CAAV,CAPgB,sDAAZ,+DAAR,CAUD,CAXD,IAWO,CACLP,UAAU,CAAC,sBAAD,CAAyB,+BAAzB,CAAV,CACD,CACD;AACD,CAjBwB,CAiBtB,EAjBsB,CAAzB,CAmBA,MAAO,CAAEC,KAAK,CAALA,KAAF,CAASO,MAAM,CAAET,UAAjB,CAAP,CACD,CAxBD,CA0BA,cAAeF,CAAAA,OAAf","sourcesContent":["import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { ConnectorNames } from '@pancakeswap-libs/uikit'\nimport { useToast } from 'state/hooks'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\n\nconst useAuth = () => {\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback((connectorID: ConnectorNames) => {\n    const connector = connectorsByName[connectorID]\n    if (connector) {\n      activate(connector, async (error: Error) => {\n        if (error instanceof UnsupportedChainIdError) {\n          const hasSetup = await setupNetwork()\n          if (hasSetup) {\n            activate(connector)\n          }\n        } else {\n          toastError(error.name, error.message)\n        }\n      })\n    } else {\n      toastError(\"Can't find connector\", 'The connector config is wrong')\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return { login, logout: deactivate }\n}\n\nexport default useAuth\n"]},"metadata":{},"sourceType":"module"}