{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback } from 'react';\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core';\nimport { useToast } from 'state/hooks';\nimport { connectorsByName } from 'utils/web3React';\nimport { setupNetwork } from 'utils/wallet';\n\nconst useAuth = () => {\n  _s();\n\n  const {\n    activate,\n    deactivate\n  } = useWeb3React();\n  const {\n    toastError\n  } = useToast();\n  const login = useCallback(connectorID => {\n    const connector = connectorsByName[connectorID];\n\n    if (connector) {\n      activate(connector, async error => {\n        if (error instanceof UnsupportedChainIdError) {\n          const hasSetup = await setupNetwork();\n\n          if (hasSetup) {\n            activate(connector);\n          }\n        } else {\n          toastError(error.name, error.message);\n        }\n      });\n    } else {\n      toastError(\"Can't find connector\", 'The connector config is wrong');\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  return {\n    login,\n    logout: deactivate\n  };\n};\n\n_s(useAuth, \"HBBM/IiTpYiR3hylFgynPnYq3fw=\", false, function () {\n  return [useWeb3React, useToast];\n});\n\nexport default useAuth;","map":{"version":3,"sources":["/Users/rp/Desktop/death/quest/answers/src/hooks/useAuth.ts"],"names":["useCallback","useWeb3React","UnsupportedChainIdError","useToast","connectorsByName","setupNetwork","useAuth","activate","deactivate","toastError","login","connectorID","connector","error","hasSetup","name","message","logout"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,YAAT,EAAuBC,uBAAvB,QAAsD,kBAAtD;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AACA,SAASC,YAAT,QAA6B,cAA7B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA2BP,YAAY,EAA7C;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAiBN,QAAQ,EAA/B;AAEA,QAAMO,KAAK,GAAGV,WAAW,CAAEW,WAAD,IAAiC;AACzD,UAAMC,SAAS,GAAGR,gBAAgB,CAACO,WAAD,CAAlC;;AACA,QAAIC,SAAJ,EAAe;AACbL,MAAAA,QAAQ,CAACK,SAAD,EAAY,MAAOC,KAAP,IAAwB;AAC1C,YAAIA,KAAK,YAAYX,uBAArB,EAA8C;AAC5C,gBAAMY,QAAQ,GAAG,MAAMT,YAAY,EAAnC;;AACA,cAAIS,QAAJ,EAAc;AACZP,YAAAA,QAAQ,CAACK,SAAD,CAAR;AACD;AACF,SALD,MAKO;AACLH,UAAAA,UAAU,CAACI,KAAK,CAACE,IAAP,EAAaF,KAAK,CAACG,OAAnB,CAAV;AACD;AACF,OATO,CAAR;AAUD,KAXD,MAWO;AACLP,MAAAA,UAAU,CAAC,sBAAD,EAAyB,+BAAzB,CAAV;AACD,KAfwD,CAgBzD;;AACD,GAjBwB,EAiBtB,EAjBsB,CAAzB;AAmBA,SAAO;AAAEC,IAAAA,KAAF;AAASO,IAAAA,MAAM,EAAET;AAAjB,GAAP;AACD,CAxBD;;GAAMF,O;UAC6BL,Y,EACVE,Q;;;AAwBzB,eAAeG,OAAf","sourcesContent":["import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { ConnectorNames } from '@pancakeswap-libs/uikit'\nimport { useToast } from 'state/hooks'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\n\nconst useAuth = () => {\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback((connectorID: ConnectorNames) => {\n    const connector = connectorsByName[connectorID]\n    if (connector) {\n      activate(connector, async (error: Error) => {\n        if (error instanceof UnsupportedChainIdError) {\n          const hasSetup = await setupNetwork()\n          if (hasSetup) {\n            activate(connector)\n          }\n        } else {\n          toastError(error.name, error.message)\n        }\n      })\n    } else {\n      toastError(\"Can't find connector\", 'The connector config is wrong')\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return { login, logout: deactivate }\n}\n\nexport default useAuth\n"]},"metadata":{},"sourceType":"module"}