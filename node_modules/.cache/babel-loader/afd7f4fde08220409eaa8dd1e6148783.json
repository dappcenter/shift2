{"ast":null,"code":"var _jsxFileName = \"/Users/rp/Desktop/death/quest/answers/src/views/Farms/Farms.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback, useState } from 'react';\nimport { Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport BigNumber from 'bignumber.js';\nimport { useWeb3React } from '@web3-react/core';\nimport { Image, Heading, Toggle, Text } from '@pancakeswap-libs/uikit';\nimport styled from 'styled-components';\nimport { BLOCKS_PER_YEAR, SHIFT_PER_BLOCK, SHIFT_POOL_PID } from 'config';\nimport FlexLayout from 'components/layout/Flex';\nimport Page from 'components/layout/Page';\nimport { useFarms, usePriceBnbBusd, usePriceCakeBusd, usePriceEthBusd } from 'state/hooks';\nimport useRefresh from 'hooks/useRefresh';\nimport { fetchFarmUserDataAsync } from 'state/actions';\nimport { QuoteToken } from 'config/constants/types';\nimport useI18n from 'hooks/useI18n';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport { orderBy } from 'lodash';\nimport FarmCard from './components/FarmCard/FarmCard';\nimport Table from './components/FarmTable/FarmTable';\nimport FarmTabButtons from './components/FarmTabButtons';\nimport SearchInput from './components/SearchInput';\nimport ToggleView from './components/ToggleView/ToggleView';\nimport { DesktopColumnSchema, ViewMode } from './components/types';\nimport Select from './components/Select/Select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ControlContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    background: rgb(33, 33, 49);\n\n  }\n`;\n_c = ControlContainer;\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`;\n_c2 = ToggleWrapper;\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`;\n_c3 = LabelWrapper;\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`;\n_c4 = FilterContainer;\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`;\n_c5 = ViewControls;\nconst StyledImage = styled(Image)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 58px;\n`;\nconst Header = styled.div`\n  padding: 32px 0px;\n  // background: ${({\n  theme\n}) => theme.colors.gradients.bubblegum};\n\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`;\n_c6 = Header;\n\nconst Farms = () => {\n  _s();\n\n  const {\n    path\n  } = useRouteMatch();\n  const {\n    pathname\n  } = useLocation();\n  const TranslateString = useI18n();\n  const farmsLP = useFarms();\n  const cakePrice = usePriceCakeBusd();\n  const bnbPrice = usePriceBnbBusd();\n  const [query, setQuery] = useState('');\n  const [viewMode, setViewMode] = useState(ViewMode.TABLE);\n  const ethPriceUsd = usePriceEthBusd();\n  const {\n    account\n  } = useWeb3React();\n  const [sortOption, setSortOption] = useState('hot');\n  const dispatch = useDispatch();\n  const {\n    fastRefresh\n  } = useRefresh();\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account));\n    }\n  }, [account, dispatch, fastRefresh]);\n  const [stackedOnly, setStackedOnly] = useState(false);\n  const activeFarms = farmsLP.filter(farm => farm.pid !== 0 && farm.multiplier !== '0X');\n  const inactiveFarms = farmsLP.filter(farm => farm.pid !== 0 && farm.multiplier === '0X');\n  const stackedOnlyFarms = activeFarms.filter(farm => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0));\n\n  const sortFarms = farms => {\n    switch (sortOption) {\n      case 'apr':\n        return orderBy(farms, 'apy', 'desc');\n\n      case 'multiplier':\n        return orderBy(farms, farm => Number(farm.multiplier.slice(0, -1)), 'desc');\n\n      case 'earned':\n        return orderBy(farms, farm => farm.userData ? farm.userData.earnings : 0, 'desc');\n\n      case 'liquidity':\n        return orderBy(farms, farm => Number(farm.liquidity), 'desc');\n\n      default:\n        return farms;\n    }\n  }; // /!\\ This function will be removed soon\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\n  // to retrieve assets prices against USD\n\n\n  const farmsList = useCallback(farmsToDisplay => {\n    var _farmsLP$find;\n\n    const cakePriceVsBNB = new BigNumber(((_farmsLP$find = farmsLP.find(farm => farm.pid === SHIFT_POOL_PID)) === null || _farmsLP$find === void 0 ? void 0 : _farmsLP$find.tokenPriceVsQuote) || 0);\n    let farmsToDisplayWithAPY = farmsToDisplay.map(farm => {\n      if (!farm.tokenAmount || !farm.lpTotalInQuoteToken) {\n        return farm;\n      }\n\n      const cakeRewardPerBlock = SHIFT_PER_BLOCK.times(farm.poolWeight);\n      const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR); // cakePriceInQuote * cakeRewardPerYear / lpTotalInQuoteToken\n\n      let apy = cakePriceVsBNB.times(cakeRewardPerYear).div(farm.lpTotalInQuoteToken);\n\n      if (farm.quoteTokenSymbol === QuoteToken.BUSD || farm.quoteTokenSymbol === QuoteToken.UST) {\n        apy = cakePriceVsBNB.times(cakeRewardPerYear).div(farm.lpTotalInQuoteToken).times(bnbPrice);\n      } else if (farm.quoteTokenSymbol === QuoteToken.ETH) {\n        apy = cakePrice.div(ethPriceUsd).times(cakeRewardPerYear).div(farm.lpTotalInQuoteToken);\n      } else if (farm.quoteTokenSymbol === QuoteToken.SHIFT) {\n        apy = cakeRewardPerYear.div(farm.lpTotalInQuoteToken);\n      } else if (farm.dual) {\n        const cakeApy = farm && cakePriceVsBNB.times(cakeRewardPerBlock).times(BLOCKS_PER_YEAR).div(farm.lpTotalInQuoteToken);\n        const dualApy = farm.tokenPriceVsQuote && new BigNumber(farm.tokenPriceVsQuote).times(farm.dual.rewardPerBlock).times(BLOCKS_PER_YEAR).div(farm.lpTotalInQuoteToken);\n        apy = cakeApy && dualApy && cakeApy.plus(dualApy);\n      }\n\n      let liquidity = farm.lpTotalInQuoteToken;\n\n      if (!farm.lpTotalInQuoteToken) {\n        liquidity = null;\n      }\n\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n        liquidity = bnbPrice.times(farm.lpTotalInQuoteToken);\n      }\n\n      if (farm.quoteTokenSymbol === QuoteToken.SHIFT) {\n        liquidity = cakePrice.times(farm.lpTotalInQuoteToken);\n      }\n\n      if (farm.quoteTokenSymbol === QuoteToken.ETH) {\n        liquidity = ethPriceUsd.times(farm.lpTotalInQuoteToken);\n      }\n\n      return { ...farm,\n        apy,\n        liquidity\n      };\n    });\n\n    if (query) {\n      const lowercaseQuery = query.toLowerCase();\n      farmsToDisplayWithAPY = farmsToDisplayWithAPY.filter(farm => {\n        if (farm.lpSymbol.toLowerCase().includes(lowercaseQuery)) {\n          return true;\n        }\n\n        return false;\n      });\n    }\n\n    return farmsToDisplayWithAPY;\n  }, [bnbPrice, farmsLP, query, cakePrice, ethPriceUsd]);\n\n  const handleChangeQuery = event => {\n    setQuery(event.target.value);\n  };\n\n  const isActive = !pathname.includes('history');\n  let farmsStaked = [];\n\n  if (isActive) {\n    farmsStaked = stackedOnly ? farmsList(stackedOnlyFarms) : farmsList(activeFarms);\n  } else {\n    farmsStaked = farmsList(inactiveFarms);\n  }\n\n  farmsStaked = sortFarms(farmsStaked);\n  const rowData = farmsStaked.map(farm => {\n    const {\n      quoteTokenAdresses,\n      quoteTokenSymbol,\n      tokenAddresses\n    } = farm;\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANSHIFT', '');\n    const row = {\n      apr: {\n        value: farm.apy && farm.apy.times(new BigNumber(100)).toNumber().toLocaleString('en-US', {\n          maximumFractionDigits: 2\n        }),\n        multiplier: farm.multiplier,\n        lpLabel,\n        quoteTokenAdresses,\n        quoteTokenSymbol,\n        tokenAddresses,\n        cakePrice,\n        originalValue: farm.apy\n      },\n      farm: {\n        image: farm.lpSymbol.split(' ')[0].toLocaleLowerCase(),\n        label: lpLabel,\n        pid: farm.pid\n      },\n      earned: {\n        earnings: farm.userData ? getBalanceNumber(new BigNumber(farm.userData.earnings)) : null,\n        pid: farm.pid\n      },\n      liquidity: {\n        liquidity: farm.liquidity\n      },\n      multiplier: {\n        multiplier: farm.multiplier\n      },\n      details: farm\n    };\n    return row;\n  });\n\n  const renderContent = () => {\n    if (viewMode === ViewMode.TABLE && rowData.length) {\n      const columnSchema = DesktopColumnSchema;\n      const columns = columnSchema.map(column => ({\n        id: column.id,\n        name: column.name,\n        label: column.label,\n        sort: (a, b) => {\n          switch (column.name) {\n            case 'farm':\n              return b.id - a.id;\n\n            case 'apr':\n              if (a.original.apr.value && b.original.apr.value) {\n                return Number(a.original.apr.value) - Number(b.original.apr.value);\n              }\n\n              return 0;\n\n            case 'earned':\n              return a.original.earned.earnings - b.original.earned.earnings;\n\n            default:\n              return 1;\n          }\n        },\n        sortable: column.sortable\n      }));\n      return /*#__PURE__*/_jsxDEV(Table, {\n        data: rowData,\n        columns: columns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FlexLayout, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: `${path}`,\n          children: farmsStaked.map(farm => /*#__PURE__*/_jsxDEV(FarmCard, {\n            farm: farm,\n            bnbPrice: bnbPrice,\n            cakePrice: cakePrice,\n            ethPrice: ethPriceUsd,\n            account: account,\n            removed: false\n          }, farm.pid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: `${path}/history`,\n          children: farmsStaked.map(farm => /*#__PURE__*/_jsxDEV(FarmCard, {\n            farm: farm,\n            bnbPrice: bnbPrice,\n            cakePrice: cakePrice,\n            ethPrice: ethPriceUsd,\n            account: account,\n            removed: true\n          }, farm.pid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this);\n  };\n\n  const handleSortOptionChange = option => {\n    setSortOption(option.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h2\",\n        size: \"xxl\",\n        color: \"white\",\n        mb: \"24px\",\n        \"margin-left\": true,\n        children: TranslateString(999, 'LIQUIDITY FARM')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Page, {\n      children: [/*#__PURE__*/_jsxDEV(ControlContainer, {\n        children: [/*#__PURE__*/_jsxDEV(ViewControls, {\n          children: [/*#__PURE__*/_jsxDEV(ToggleView, {\n            viewMode: viewMode,\n            onToggle: mode => setViewMode(mode)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToggleWrapper, {\n            children: [/*#__PURE__*/_jsxDEV(Toggle, {\n              checked: stackedOnly,\n              onChange: () => setStackedOnly(!stackedOnly),\n              scale: \"sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              children: [\" \", TranslateString(1116, 'Staked only')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FarmTabButtons, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilterContainer, {\n          children: [/*#__PURE__*/_jsxDEV(LabelWrapper, {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              children: \"FILTER BY\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              options: [{\n                label: 'APR',\n                value: 'apr'\n              }, {\n                label: 'APR',\n                value: 'apr'\n              }, {\n                label: 'Multiplier',\n                value: 'multiplier'\n              }, {\n                label: 'Earned',\n                value: 'earned'\n              }, {\n                label: 'Liquidity',\n                value: 'liquidity'\n              }],\n              onChange: handleSortOptionChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LabelWrapper, {\n            style: {\n              marginLeft: 16\n            },\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              children: \"SEARCH\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SearchInput, {\n              onChange: handleChangeQuery,\n              value: query\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), renderContent()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Farms, \"I87L0cyZhd52ITIiB4NPQ3do174=\", false, function () {\n  return [useRouteMatch, useLocation, useI18n, useFarms, usePriceCakeBusd, usePriceBnbBusd, usePriceEthBusd, useWeb3React, useDispatch, useRefresh];\n});\n\n_c7 = Farms;\nexport default Farms;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"ControlContainer\");\n$RefreshReg$(_c2, \"ToggleWrapper\");\n$RefreshReg$(_c3, \"LabelWrapper\");\n$RefreshReg$(_c4, \"FilterContainer\");\n$RefreshReg$(_c5, \"ViewControls\");\n$RefreshReg$(_c6, \"Header\");\n$RefreshReg$(_c7, \"Farms\");","map":{"version":3,"sources":["/Users/rp/Desktop/death/quest/answers/src/views/Farms/Farms.tsx"],"names":["React","useEffect","useCallback","useState","Route","useRouteMatch","useLocation","useDispatch","BigNumber","useWeb3React","Image","Heading","Toggle","Text","styled","BLOCKS_PER_YEAR","SHIFT_PER_BLOCK","SHIFT_POOL_PID","FlexLayout","Page","useFarms","usePriceBnbBusd","usePriceCakeBusd","usePriceEthBusd","useRefresh","fetchFarmUserDataAsync","QuoteToken","useI18n","getBalanceNumber","orderBy","FarmCard","Table","FarmTabButtons","SearchInput","ToggleView","DesktopColumnSchema","ViewMode","Select","ControlContainer","div","theme","mediaQueries","sm","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","StyledImage","Header","colors","gradients","bubblegum","Farms","path","pathname","TranslateString","farmsLP","cakePrice","bnbPrice","query","setQuery","viewMode","setViewMode","TABLE","ethPriceUsd","account","sortOption","setSortOption","dispatch","fastRefresh","stackedOnly","setStackedOnly","activeFarms","filter","farm","pid","multiplier","inactiveFarms","stackedOnlyFarms","userData","stakedBalance","isGreaterThan","sortFarms","farms","Number","slice","earnings","liquidity","farmsList","farmsToDisplay","cakePriceVsBNB","find","tokenPriceVsQuote","farmsToDisplayWithAPY","map","tokenAmount","lpTotalInQuoteToken","cakeRewardPerBlock","times","poolWeight","cakeRewardPerYear","apy","quoteTokenSymbol","BUSD","UST","ETH","SHIFT","dual","cakeApy","dualApy","rewardPerBlock","plus","BNB","lowercaseQuery","toLowerCase","lpSymbol","includes","handleChangeQuery","event","target","value","isActive","farmsStaked","rowData","quoteTokenAdresses","tokenAddresses","lpLabel","split","toUpperCase","replace","row","apr","toNumber","toLocaleString","maximumFractionDigits","originalValue","image","toLocaleLowerCase","label","earned","details","renderContent","length","columnSchema","columns","column","id","name","sort","a","b","original","sortable","handleSortOptionChange","option","mode","marginLeft"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAASC,KAAT,EAAgBC,aAAhB,EAA+BC,WAA/B,QAAkD,kBAAlD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,KAAT,EAAgBC,OAAhB,EAAkCC,MAAlC,EAA0CC,IAA1C,QAAsD,yBAAtD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,eAAT,EAA0BC,eAA1B,EAA2CC,cAA3C,QAAiE,QAAjE;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,QAAT,EAAmBC,eAAnB,EAAoCC,gBAApC,EAAsDC,eAAtD,QAA6E,aAA7E;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,sBAAT,QAAuC,eAAvC;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,OAAT,QAAwB,QAAxB;AAEA,OAAOC,QAAP,MAA8C,gCAA9C;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,SAASC,mBAAT,EAA8BC,QAA9B,QAA8C,oBAA9C;AACA,OAAOC,MAAP,MAAoC,4BAApC;;;AAEA,MAAMC,gBAAgB,GAAGxB,MAAM,CAACyB,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,YAAN,CAAmBC,EAAG;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;KAAMJ,gB;AAkBN,MAAMK,aAAa,GAAG7B,MAAM,CAACyB,GAAI;AACjC;AACA;AACA;AACA;AACA,IAAI1B,IAAK;AACT;AACA;AACA,CARA;MAAM8B,a;AAUN,MAAMC,YAAY,GAAG9B,MAAM,CAACyB,GAAI;AAChC,MAAM1B,IAAK;AACX;AACA;AACA,CAJA;MAAM+B,Y;AAMN,MAAMC,eAAe,GAAG/B,MAAM,CAACyB,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,YAAN,CAAmBC,EAAG;AACzC;AACA;AACA;AACA,CAVA;MAAMG,e;AAYN,MAAMC,YAAY,GAAGhC,MAAM,CAACyB,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,YAAN,CAAmBC,EAAG;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;MAAMI,Y;AAqBN,MAAMC,WAAW,GAAGjC,MAAM,CAACJ,KAAD,CAAQ;AAClC;AACA;AACA;AACA,CAJA;AAMA,MAAMsC,MAAM,GAAGlC,MAAM,CAACyB,GAAI;AAC1B;AACA,mBAAmB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACS,MAAN,CAAaC,SAAb,CAAuBC,SAAU;AACnE;AACA;AACA;AACA;AACA,IAAI,CAAC;AAAEX,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,YAAN,CAAmBC,EAAG;AACzC;AACA;AACA;AACA,CAXA;MAAMM,M;;AAaN,MAAMI,KAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAWhD,aAAa,EAA9B;AACA,QAAM;AAAEiD,IAAAA;AAAF,MAAehD,WAAW,EAAhC;AACA,QAAMiD,eAAe,GAAG5B,OAAO,EAA/B;AACA,QAAM6B,OAAO,GAAGpC,QAAQ,EAAxB;AACA,QAAMqC,SAAS,GAAGnC,gBAAgB,EAAlC;AACA,QAAMoC,QAAQ,GAAGrC,eAAe,EAAhC;AACA,QAAM,CAACsC,KAAD,EAAQC,QAAR,IAAoBzD,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC0D,QAAD,EAAWC,WAAX,IAA0B3D,QAAQ,CAACiC,QAAQ,CAAC2B,KAAV,CAAxC;AACA,QAAMC,WAAW,GAAGzC,eAAe,EAAnC;AACA,QAAM;AAAE0C,IAAAA;AAAF,MAAcxD,YAAY,EAAhC;AACA,QAAM,CAACyD,UAAD,EAAaC,aAAb,IAA8BhE,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAMiE,QAAQ,GAAG7D,WAAW,EAA5B;AACA,QAAM;AAAE8D,IAAAA;AAAF,MAAkB7C,UAAU,EAAlC;AACAvB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgE,OAAJ,EAAa;AACXG,MAAAA,QAAQ,CAAC3C,sBAAsB,CAACwC,OAAD,CAAvB,CAAR;AACD;AACF,GAJQ,EAIN,CAACA,OAAD,EAAUG,QAAV,EAAoBC,WAApB,CAJM,CAAT;AAMA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCpE,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAMqE,WAAW,GAAGhB,OAAO,CAACiB,MAAR,CAAgBC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAa,CAAb,IAAkBD,IAAI,CAACE,UAAL,KAAoB,IAA/D,CAApB;AACA,QAAMC,aAAa,GAAGrB,OAAO,CAACiB,MAAR,CAAgBC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAa,CAAb,IAAkBD,IAAI,CAACE,UAAL,KAAoB,IAA/D,CAAtB;AAEA,QAAME,gBAAgB,GAAGN,WAAW,CAACC,MAAZ,CACtBC,IAAD,IAAUA,IAAI,CAACK,QAAL,IAAiB,IAAIvE,SAAJ,CAAckE,IAAI,CAACK,QAAL,CAAcC,aAA5B,EAA2CC,aAA3C,CAAyD,CAAzD,CADJ,CAAzB;;AAIA,QAAMC,SAAS,GAAIC,KAAD,IAAyD;AACzE,YAAQjB,UAAR;AACE,WAAK,KAAL;AACE,eAAOrC,OAAO,CAACsD,KAAD,EAAQ,KAAR,EAAe,MAAf,CAAd;;AACF,WAAK,YAAL;AACE,eAAOtD,OAAO,CAACsD,KAAD,EAAST,IAAD,IAA+BU,MAAM,CAACV,IAAI,CAACE,UAAL,CAAgBS,KAAhB,CAAsB,CAAtB,EAAyB,CAAC,CAA1B,CAAD,CAA7C,EAA6E,MAA7E,CAAd;;AACF,WAAK,QAAL;AACE,eAAOxD,OAAO,CAACsD,KAAD,EAAST,IAAD,IAAgCA,IAAI,CAACK,QAAL,GAAgBL,IAAI,CAACK,QAAL,CAAcO,QAA9B,GAAyC,CAAjF,EAAqF,MAArF,CAAd;;AACF,WAAK,WAAL;AACE,eAAOzD,OAAO,CAACsD,KAAD,EAAST,IAAD,IAA+BU,MAAM,CAACV,IAAI,CAACa,SAAN,CAA7C,EAA+D,MAA/D,CAAd;;AACF;AACE,eAAOJ,KAAP;AAVJ;AAYD,GAbD,CA9B4B,CA6C5B;AACA;AACA;;;AACA,QAAMK,SAAS,GAAGtF,WAAW,CAC1BuF,cAAD,IAA2C;AAAA;;AACzC,UAAMC,cAAc,GAAG,IAAIlF,SAAJ,CAAc,kBAAAgD,OAAO,CAACmC,IAAR,CAAcjB,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAa1D,cAApC,iEAAqD2E,iBAArD,KAA0E,CAAxF,CAAvB;AACA,QAAIC,qBAA4C,GAAGJ,cAAc,CAACK,GAAf,CAAoBpB,IAAD,IAAU;AAC9E,UAAI,CAACA,IAAI,CAACqB,WAAN,IAAqB,CAACrB,IAAI,CAACsB,mBAA/B,EAAoD;AAClD,eAAOtB,IAAP;AACD;;AACD,YAAMuB,kBAAkB,GAAGjF,eAAe,CAACkF,KAAhB,CAAsBxB,IAAI,CAACyB,UAA3B,CAA3B;AACA,YAAMC,iBAAiB,GAAGH,kBAAkB,CAACC,KAAnB,CAAyBnF,eAAzB,CAA1B,CAL8E,CAO9E;;AACA,UAAIsF,GAAG,GAAGX,cAAc,CAACQ,KAAf,CAAqBE,iBAArB,EAAwC7D,GAAxC,CAA4CmC,IAAI,CAACsB,mBAAjD,CAAV;;AAEA,UAAItB,IAAI,CAAC4B,gBAAL,KAA0B5E,UAAU,CAAC6E,IAArC,IAA6C7B,IAAI,CAAC4B,gBAAL,KAA0B5E,UAAU,CAAC8E,GAAtF,EAA2F;AACzFH,QAAAA,GAAG,GAAGX,cAAc,CAACQ,KAAf,CAAqBE,iBAArB,EAAwC7D,GAAxC,CAA4CmC,IAAI,CAACsB,mBAAjD,EAAsEE,KAAtE,CAA4ExC,QAA5E,CAAN;AACD,OAFD,MAEO,IAAIgB,IAAI,CAAC4B,gBAAL,KAA0B5E,UAAU,CAAC+E,GAAzC,EAA8C;AACnDJ,QAAAA,GAAG,GAAG5C,SAAS,CAAClB,GAAV,CAAcyB,WAAd,EAA2BkC,KAA3B,CAAiCE,iBAAjC,EAAoD7D,GAApD,CAAwDmC,IAAI,CAACsB,mBAA7D,CAAN;AACD,OAFM,MAEA,IAAItB,IAAI,CAAC4B,gBAAL,KAA0B5E,UAAU,CAACgF,KAAzC,EAAgD;AACrDL,QAAAA,GAAG,GAAGD,iBAAiB,CAAC7D,GAAlB,CAAsBmC,IAAI,CAACsB,mBAA3B,CAAN;AACD,OAFM,MAEA,IAAItB,IAAI,CAACiC,IAAT,EAAe;AACpB,cAAMC,OAAO,GACXlC,IAAI,IAAIgB,cAAc,CAACQ,KAAf,CAAqBD,kBAArB,EAAyCC,KAAzC,CAA+CnF,eAA/C,EAAgEwB,GAAhE,CAAoEmC,IAAI,CAACsB,mBAAzE,CADV;AAEA,cAAMa,OAAO,GACXnC,IAAI,CAACkB,iBAAL,IACA,IAAIpF,SAAJ,CAAckE,IAAI,CAACkB,iBAAnB,EACGM,KADH,CACSxB,IAAI,CAACiC,IAAL,CAAUG,cADnB,EAEGZ,KAFH,CAESnF,eAFT,EAGGwB,GAHH,CAGOmC,IAAI,CAACsB,mBAHZ,CAFF;AAOAK,QAAAA,GAAG,GAAGO,OAAO,IAAIC,OAAX,IAAsBD,OAAO,CAACG,IAAR,CAAaF,OAAb,CAA5B;AACD;;AAED,UAAItB,SAAS,GAAGb,IAAI,CAACsB,mBAArB;;AAEA,UAAI,CAACtB,IAAI,CAACsB,mBAAV,EAA+B;AAC7BT,QAAAA,SAAS,GAAG,IAAZ;AACD;;AACD,UAAIb,IAAI,CAAC4B,gBAAL,KAA0B5E,UAAU,CAACsF,GAAzC,EAA8C;AAC5CzB,QAAAA,SAAS,GAAG7B,QAAQ,CAACwC,KAAT,CAAexB,IAAI,CAACsB,mBAApB,CAAZ;AACD;;AACD,UAAItB,IAAI,CAAC4B,gBAAL,KAA0B5E,UAAU,CAACgF,KAAzC,EAAgD;AAC9CnB,QAAAA,SAAS,GAAG9B,SAAS,CAACyC,KAAV,CAAgBxB,IAAI,CAACsB,mBAArB,CAAZ;AACD;;AAED,UAAItB,IAAI,CAAC4B,gBAAL,KAA0B5E,UAAU,CAAC+E,GAAzC,EAA8C;AAC5ClB,QAAAA,SAAS,GAAGvB,WAAW,CAACkC,KAAZ,CAAkBxB,IAAI,CAACsB,mBAAvB,CAAZ;AACD;;AAED,aAAO,EAAE,GAAGtB,IAAL;AAAW2B,QAAAA,GAAX;AAAgBd,QAAAA;AAAhB,OAAP;AACD,KA9CkD,CAAnD;;AAgDA,QAAI5B,KAAJ,EAAW;AACT,YAAMsD,cAAc,GAAGtD,KAAK,CAACuD,WAAN,EAAvB;AACArB,MAAAA,qBAAqB,GAAGA,qBAAqB,CAACpB,MAAtB,CAA8BC,IAAD,IAA+B;AAClF,YAAIA,IAAI,CAACyC,QAAL,CAAcD,WAAd,GAA4BE,QAA5B,CAAqCH,cAArC,CAAJ,EAA0D;AACxD,iBAAO,IAAP;AACD;;AAED,eAAO,KAAP;AACD,OANuB,CAAxB;AAOD;;AACD,WAAOpB,qBAAP;AACD,GA9D0B,EA+D3B,CAACnC,QAAD,EAAWF,OAAX,EAAoBG,KAApB,EAA2BF,SAA3B,EAAsCO,WAAtC,CA/D2B,CAA7B;;AAkEA,QAAMqD,iBAAiB,GAAIC,KAAD,IAAgD;AACxE1D,IAAAA,QAAQ,CAAC0D,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,GAFD;;AAIA,QAAMC,QAAQ,GAAG,CAACnE,QAAQ,CAAC8D,QAAT,CAAkB,SAAlB,CAAlB;AACA,MAAIM,WAAW,GAAG,EAAlB;;AACA,MAAID,QAAJ,EAAc;AACZC,IAAAA,WAAW,GAAGpD,WAAW,GAAGkB,SAAS,CAACV,gBAAD,CAAZ,GAAiCU,SAAS,CAAChB,WAAD,CAAnE;AACD,GAFD,MAEO;AACLkD,IAAAA,WAAW,GAAGlC,SAAS,CAACX,aAAD,CAAvB;AACD;;AAED6C,EAAAA,WAAW,GAAGxC,SAAS,CAACwC,WAAD,CAAvB;AAEA,QAAMC,OAAO,GAAGD,WAAW,CAAC5B,GAAZ,CAAiBpB,IAAD,IAAU;AACxC,UAAM;AAAEkD,MAAAA,kBAAF;AAAsBtB,MAAAA,gBAAtB;AAAwCuB,MAAAA;AAAxC,QAA2DnD,IAAjE;AACA,UAAMoD,OAAO,GAAGpD,IAAI,CAACyC,QAAL,IAAiBzC,IAAI,CAACyC,QAAL,CAAcY,KAAd,CAAoB,GAApB,EAAyB,CAAzB,EAA4BC,WAA5B,GAA0CC,OAA1C,CAAkD,UAAlD,EAA8D,EAA9D,CAAjC;AAEA,UAAMC,GAAa,GAAG;AACpBC,MAAAA,GAAG,EAAE;AACHX,QAAAA,KAAK,EACH9C,IAAI,CAAC2B,GAAL,IACA3B,IAAI,CAAC2B,GAAL,CAASH,KAAT,CAAe,IAAI1F,SAAJ,CAAc,GAAd,CAAf,EAAmC4H,QAAnC,GAA8CC,cAA9C,CAA6D,OAA7D,EAAsE;AAAEC,UAAAA,qBAAqB,EAAE;AAAzB,SAAtE,CAHC;AAIH1D,QAAAA,UAAU,EAAEF,IAAI,CAACE,UAJd;AAKHkD,QAAAA,OALG;AAMHF,QAAAA,kBANG;AAOHtB,QAAAA,gBAPG;AAQHuB,QAAAA,cARG;AASHpE,QAAAA,SATG;AAUH8E,QAAAA,aAAa,EAAE7D,IAAI,CAAC2B;AAVjB,OADe;AAapB3B,MAAAA,IAAI,EAAE;AACJ8D,QAAAA,KAAK,EAAE9D,IAAI,CAACyC,QAAL,CAAcY,KAAd,CAAoB,GAApB,EAAyB,CAAzB,EAA4BU,iBAA5B,EADH;AAEJC,QAAAA,KAAK,EAAEZ,OAFH;AAGJnD,QAAAA,GAAG,EAAED,IAAI,CAACC;AAHN,OAbc;AAkBpBgE,MAAAA,MAAM,EAAE;AACNrD,QAAAA,QAAQ,EAAEZ,IAAI,CAACK,QAAL,GAAgBnD,gBAAgB,CAAC,IAAIpB,SAAJ,CAAckE,IAAI,CAACK,QAAL,CAAcO,QAA5B,CAAD,CAAhC,GAA0E,IAD9E;AAENX,QAAAA,GAAG,EAAED,IAAI,CAACC;AAFJ,OAlBY;AAsBpBY,MAAAA,SAAS,EAAE;AACTA,QAAAA,SAAS,EAAEb,IAAI,CAACa;AADP,OAtBS;AAyBpBX,MAAAA,UAAU,EAAE;AACVA,QAAAA,UAAU,EAAEF,IAAI,CAACE;AADP,OAzBQ;AA4BpBgE,MAAAA,OAAO,EAAElE;AA5BW,KAAtB;AA+BA,WAAOwD,GAAP;AACD,GApCe,CAAhB;;AAsCA,QAAMW,aAAa,GAAG,MAAmB;AACvC,QAAIhF,QAAQ,KAAKzB,QAAQ,CAAC2B,KAAtB,IAA+B4D,OAAO,CAACmB,MAA3C,EAAmD;AACjD,YAAMC,YAAY,GAAG5G,mBAArB;AAEA,YAAM6G,OAAO,GAAGD,YAAY,CAACjD,GAAb,CAAkBmD,MAAD,KAAa;AAC5CC,QAAAA,EAAE,EAAED,MAAM,CAACC,EADiC;AAE5CC,QAAAA,IAAI,EAAEF,MAAM,CAACE,IAF+B;AAG5CT,QAAAA,KAAK,EAAEO,MAAM,CAACP,KAH8B;AAI5CU,QAAAA,IAAI,EAAE,CAACC,CAAD,EAAuBC,CAAvB,KAAgD;AACpD,kBAAQL,MAAM,CAACE,IAAf;AACE,iBAAK,MAAL;AACE,qBAAOG,CAAC,CAACJ,EAAF,GAAOG,CAAC,CAACH,EAAhB;;AACF,iBAAK,KAAL;AACE,kBAAIG,CAAC,CAACE,QAAF,CAAWpB,GAAX,CAAeX,KAAf,IAAwB8B,CAAC,CAACC,QAAF,CAAWpB,GAAX,CAAeX,KAA3C,EAAkD;AAChD,uBAAOpC,MAAM,CAACiE,CAAC,CAACE,QAAF,CAAWpB,GAAX,CAAeX,KAAhB,CAAN,GAA+BpC,MAAM,CAACkE,CAAC,CAACC,QAAF,CAAWpB,GAAX,CAAeX,KAAhB,CAA5C;AACD;;AAED,qBAAO,CAAP;;AACF,iBAAK,QAAL;AACE,qBAAO6B,CAAC,CAACE,QAAF,CAAWZ,MAAX,CAAkBrD,QAAlB,GAA6BgE,CAAC,CAACC,QAAF,CAAWZ,MAAX,CAAkBrD,QAAtD;;AACF;AACE,qBAAO,CAAP;AAZJ;AAcD,SAnB2C;AAoB5CkE,QAAAA,QAAQ,EAAEP,MAAM,CAACO;AApB2B,OAAb,CAAjB,CAAhB;AAuBA,0BAAO,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE7B,OAAb;AAAsB,QAAA,OAAO,EAAEqB;AAA/B;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,wBACE;AAAA,6BACE,QAAC,UAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAG,GAAE3F,IAAK,EAA3B;AAAA,oBACGqE,WAAW,CAAC5B,GAAZ,CAAiBpB,IAAD,iBACf,QAAC,QAAD;AAEE,YAAA,IAAI,EAAEA,IAFR;AAGE,YAAA,QAAQ,EAAEhB,QAHZ;AAIE,YAAA,SAAS,EAAED,SAJb;AAKE,YAAA,QAAQ,EAAEO,WALZ;AAME,YAAA,OAAO,EAAEC,OANX;AAOE,YAAA,OAAO,EAAE;AAPX,aACOS,IAAI,CAACC,GADZ;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADF,eAcE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAG,GAAEtB,IAAK,UAA3B;AAAA,oBACGqE,WAAW,CAAC5B,GAAZ,CAAiBpB,IAAD,iBACf,QAAC,QAAD;AAEE,YAAA,IAAI,EAAEA,IAFR;AAGE,YAAA,QAAQ,EAAEhB,QAHZ;AAIE,YAAA,SAAS,EAAED,SAJb;AAKE,YAAA,QAAQ,EAAEO,WALZ;AAME,YAAA,OAAO,EAAEC,OANX;AAOE,YAAA,OAAO;AAPT,aACOS,IAAI,CAACC,GADZ;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAgCD,GA9DD;;AAgEA,QAAM8E,sBAAsB,GAAIC,MAAD,IAA+B;AAC5DvF,IAAAA,aAAa,CAACuF,MAAM,CAAClC,KAAR,CAAb;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA,6BACE,QAAC,OAAD;AAAS,QAAA,EAAE,EAAC,IAAZ;AAAiB,QAAA,IAAI,EAAC,KAAtB;AAA4B,QAAA,KAAK,EAAC,OAAlC;AAA0C,QAAA,EAAE,EAAC,MAA7C;AAAoD,2BAApD;AAAA,kBACGjE,eAAe,CAAC,GAAD,EAAM,gBAAN;AADlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,IAAD;AAAA,8BACE,QAAC,gBAAD;AAAA,gCACE,QAAC,YAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,QAAQ,EAAEM,QAAtB;AAAgC,YAAA,QAAQ,EAAG8F,IAAD,IAAoB7F,WAAW,CAAC6F,IAAD;AAAzE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,aAAD;AAAA,oCACE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAErF,WAAjB;AAA8B,cAAA,QAAQ,EAAE,MAAMC,cAAc,CAAC,CAACD,WAAF,CAA5D;AAA4E,cAAA,KAAK,EAAC;AAAlF;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD;AAAA,8BAAQf,eAAe,CAAC,IAAD,EAAO,aAAP,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAME,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,eAAD;AAAA,kCACE,QAAC,YAAD;AAAA,oCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,MAAD;AACE,cAAA,OAAO,EAAE,CACP;AACEmF,gBAAAA,KAAK,EAAE,KADT;AAEElB,gBAAAA,KAAK,EAAE;AAFT,eADO,EAKP;AACEkB,gBAAAA,KAAK,EAAE,KADT;AAEElB,gBAAAA,KAAK,EAAE;AAFT,eALO,EASP;AACEkB,gBAAAA,KAAK,EAAE,YADT;AAEElB,gBAAAA,KAAK,EAAE;AAFT,eATO,EAaP;AACEkB,gBAAAA,KAAK,EAAE,QADT;AAEElB,gBAAAA,KAAK,EAAE;AAFT,eAbO,EAiBP;AACEkB,gBAAAA,KAAK,EAAE,WADT;AAEElB,gBAAAA,KAAK,EAAE;AAFT,eAjBO,CADX;AAuBE,cAAA,QAAQ,EAAEiC;AAvBZ;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eA6BE,QAAC,YAAD;AAAc,YAAA,KAAK,EAAE;AAAEG,cAAAA,UAAU,EAAE;AAAd,aAArB;AAAA,oCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,WAAD;AAAa,cAAA,QAAQ,EAAEvC,iBAAvB;AAA0C,cAAA,KAAK,EAAE1D;AAAjD;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EA6CGkF,aAAa,EA7ChB;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AA0DD,CApSD;;GAAMzF,K;UACa/C,a,EACIC,W,EACGqB,O,EACRP,Q,EACEE,gB,EACDD,e,EAGGE,e,EACAd,Y,EAGHF,W,EACOiB,U;;;MAdpB4B,K;AAsSN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useCallback, useState } from 'react'\nimport { Route, useRouteMatch, useLocation } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Image, Heading, RowType, Toggle, Text } from '@pancakeswap-libs/uikit'\nimport styled from 'styled-components'\nimport { BLOCKS_PER_YEAR, SHIFT_PER_BLOCK, SHIFT_POOL_PID } from 'config'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport { useFarms, usePriceBnbBusd, usePriceCakeBusd, usePriceEthBusd } from 'state/hooks'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmUserDataAsync } from 'state/actions'\nimport { QuoteToken } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { orderBy } from 'lodash'\n\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport Table from './components/FarmTable/FarmTable'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport SearchInput from './components/SearchInput'\nimport { RowProps } from './components/FarmTable/Row'\nimport ToggleView from './components/ToggleView/ToggleView'\nimport { DesktopColumnSchema, ViewMode } from './components/types'\nimport Select, { OptionProps } from './components/Select/Select'\n\nconst ControlContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    background: rgb(33, 33, 49);\n\n  }\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst StyledImage = styled(Image)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 58px;\n`\n\nconst Header = styled.div`\n  padding: 32px 0px;\n  // background: ${({ theme }) => theme.colors.gradients.bubblegum};\n\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nconst Farms: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { pathname } = useLocation()\n  const TranslateString = useI18n()\n  const farmsLP = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const bnbPrice = usePriceBnbBusd()\n  const [query, setQuery] = useState('')\n  const [viewMode, setViewMode] = useState(ViewMode.TABLE)\n  const ethPriceUsd = usePriceEthBusd()\n  const { account } = useWeb3React()\n  const [sortOption, setSortOption] = useState('hot')\n\n  const dispatch = useDispatch()\n  const { fastRefresh } = useRefresh()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const [stackedOnly, setStackedOnly] = useState(false)\n\n  const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X')\n  const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier === '0X')\n\n  const stackedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\n    switch (sortOption) {\n      case 'apr':\n        return orderBy(farms, 'apy', 'desc')\n      case 'multiplier':\n        return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.multiplier.slice(0, -1)), 'desc')\n      case 'earned':\n        return orderBy(farms, (farm: FarmWithStakedValue) => (farm.userData ? farm.userData.earnings : 0), 'desc')\n      case 'liquidity':\n        return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\n      default:\n        return farms\n    }\n  }\n\n  // /!\\ This function will be removed soon\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\n  // to retrieve assets prices against USD\n  const farmsList = useCallback(\n    (farmsToDisplay): FarmWithStakedValue[] => {\n      const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === SHIFT_POOL_PID)?.tokenPriceVsQuote || 0)\n      let farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        if (!farm.tokenAmount || !farm.lpTotalInQuoteToken) {\n          return farm\n        }\n        const cakeRewardPerBlock = SHIFT_PER_BLOCK.times(farm.poolWeight)\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\n\n        // cakePriceInQuote * cakeRewardPerYear / lpTotalInQuoteToken\n        let apy = cakePriceVsBNB.times(cakeRewardPerYear).div(farm.lpTotalInQuoteToken)\n\n        if (farm.quoteTokenSymbol === QuoteToken.BUSD || farm.quoteTokenSymbol === QuoteToken.UST) {\n          apy = cakePriceVsBNB.times(cakeRewardPerYear).div(farm.lpTotalInQuoteToken).times(bnbPrice)\n        } else if (farm.quoteTokenSymbol === QuoteToken.ETH) {\n          apy = cakePrice.div(ethPriceUsd).times(cakeRewardPerYear).div(farm.lpTotalInQuoteToken)\n        } else if (farm.quoteTokenSymbol === QuoteToken.SHIFT) {\n          apy = cakeRewardPerYear.div(farm.lpTotalInQuoteToken)\n        } else if (farm.dual) {\n          const cakeApy =\n            farm && cakePriceVsBNB.times(cakeRewardPerBlock).times(BLOCKS_PER_YEAR).div(farm.lpTotalInQuoteToken)\n          const dualApy =\n            farm.tokenPriceVsQuote &&\n            new BigNumber(farm.tokenPriceVsQuote)\n              .times(farm.dual.rewardPerBlock)\n              .times(BLOCKS_PER_YEAR)\n              .div(farm.lpTotalInQuoteToken)\n\n          apy = cakeApy && dualApy && cakeApy.plus(dualApy)\n        }\n\n        let liquidity = farm.lpTotalInQuoteToken\n\n        if (!farm.lpTotalInQuoteToken) {\n          liquidity = null\n        }\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n          liquidity = bnbPrice.times(farm.lpTotalInQuoteToken)\n        }\n        if (farm.quoteTokenSymbol === QuoteToken.SHIFT) {\n          liquidity = cakePrice.times(farm.lpTotalInQuoteToken)\n        }\n\n        if (farm.quoteTokenSymbol === QuoteToken.ETH) {\n          liquidity = ethPriceUsd.times(farm.lpTotalInQuoteToken)\n        }\n\n        return { ...farm, apy, liquidity }\n      })\n\n      if (query) {\n        const lowercaseQuery = query.toLowerCase()\n        farmsToDisplayWithAPY = farmsToDisplayWithAPY.filter((farm: FarmWithStakedValue) => {\n          if (farm.lpSymbol.toLowerCase().includes(lowercaseQuery)) {\n            return true\n          }\n\n          return false\n        })\n      }\n      return farmsToDisplayWithAPY\n    },\n    [bnbPrice, farmsLP, query, cakePrice, ethPriceUsd],\n  )\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value)\n  }\n\n  const isActive = !pathname.includes('history')\n  let farmsStaked = []\n  if (isActive) {\n    farmsStaked = stackedOnly ? farmsList(stackedOnlyFarms) : farmsList(activeFarms)\n  } else {\n    farmsStaked = farmsList(inactiveFarms)\n  }\n\n  farmsStaked = sortFarms(farmsStaked)\n\n  const rowData = farmsStaked.map((farm) => {\n    const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses } = farm\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANSHIFT', '')\n\n    const row: RowProps = {\n      apr: {\n        value:\n          farm.apy &&\n          farm.apy.times(new BigNumber(100)).toNumber().toLocaleString('en-US', { maximumFractionDigits: 2 }),\n        multiplier: farm.multiplier,\n        lpLabel,\n        quoteTokenAdresses,\n        quoteTokenSymbol,\n        tokenAddresses,\n        cakePrice,\n        originalValue: farm.apy,\n      },\n      farm: {\n        image: farm.lpSymbol.split(' ')[0].toLocaleLowerCase(),\n        label: lpLabel,\n        pid: farm.pid,\n      },\n      earned: {\n        earnings: farm.userData ? getBalanceNumber(new BigNumber(farm.userData.earnings)) : null,\n        pid: farm.pid,\n      },\n      liquidity: {\n        liquidity: farm.liquidity,\n      },\n      multiplier: {\n        multiplier: farm.multiplier,\n      },\n      details: farm,\n    }\n\n    return row\n  })\n\n  const renderContent = (): JSX.Element => {\n    if (viewMode === ViewMode.TABLE && rowData.length) {\n      const columnSchema = DesktopColumnSchema\n\n      const columns = columnSchema.map((column) => ({\n        id: column.id,\n        name: column.name,\n        label: column.label,\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\n          switch (column.name) {\n            case 'farm':\n              return b.id - a.id\n            case 'apr':\n              if (a.original.apr.value && b.original.apr.value) {\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\n              }\n\n              return 0\n            case 'earned':\n              return a.original.earned.earnings - b.original.earned.earnings\n            default:\n              return 1\n          }\n        },\n        sortable: column.sortable,\n      }))\n\n      return <Table data={rowData} columns={columns} />\n    }\n\n    return (\n      <div>\n        <FlexLayout>\n          <Route exact path={`${path}`}>\n            {farmsStaked.map((farm) => (\n              <FarmCard\n                key={farm.pid}\n                farm={farm}\n                bnbPrice={bnbPrice}\n                cakePrice={cakePrice}\n                ethPrice={ethPriceUsd}\n                account={account}\n                removed={false}\n              />\n            ))}\n          </Route>\n          <Route exact path={`${path}/history`}>\n            {farmsStaked.map((farm) => (\n              <FarmCard\n                key={farm.pid}\n                farm={farm}\n                bnbPrice={bnbPrice}\n                cakePrice={cakePrice}\n                ethPrice={ethPriceUsd}\n                account={account}\n                removed\n              />\n            ))}\n          </Route>\n        </FlexLayout>\n      </div>\n    )\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  return (\n    <>\n      <Header>\n        <Heading as=\"h2\" size=\"xxl\" color=\"white\" mb=\"24px\" margin-left>\n          {TranslateString(999, 'LIQUIDITY FARM')}\n        </Heading>\n      \n      </Header>\n      <Page>\n        <ControlContainer>\n          <ViewControls>\n            <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n            <ToggleWrapper>\n              <Toggle checked={stackedOnly} onChange={() => setStackedOnly(!stackedOnly)} scale=\"sm\" />\n              <Text> {TranslateString(1116, 'Staked only')}</Text>\n            </ToggleWrapper>\n            <FarmTabButtons />\n          </ViewControls>\n          <FilterContainer>\n            <LabelWrapper>\n              <Text>FILTER BY</Text>\n              <Select\n                options={[\n                  {\n                    label: 'APR',\n                    value: 'apr',\n                  },\n                  {\n                    label: 'APR',\n                    value: 'apr',\n                  },\n                  {\n                    label: 'Multiplier',\n                    value: 'multiplier',\n                  },\n                  {\n                    label: 'Earned',\n                    value: 'earned',\n                  },\n                  {\n                    label: 'Liquidity',\n                    value: 'liquidity',\n                  },\n                ]}\n                onChange={handleSortOptionChange}\n              />\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text>SEARCH</Text>\n              <SearchInput onChange={handleChangeQuery} value={query} />\n            </LabelWrapper>\n          </FilterContainer>\n        </ControlContainer>\n        {renderContent()}\n        {/* <StyledImage src=\"/images/3dpan.png\" alt=\"Pancake illustration\" width={120} height={103} /> */}\n      </Page>\n    </>\n  )\n}\n\nexport default Farms\n"]},"metadata":{},"sourceType":"module"}