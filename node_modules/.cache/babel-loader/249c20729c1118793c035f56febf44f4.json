{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$(),\n    _s9 = $RefreshSig$(),\n    _s10 = $RefreshSig$(),\n    _s11 = $RefreshSig$(),\n    _s12 = $RefreshSig$(),\n    _s13 = $RefreshSig$(),\n    _s14 = $RefreshSig$(),\n    _s15 = $RefreshSig$(),\n    _s16 = $RefreshSig$(),\n    _s17 = $RefreshSig$(),\n    _s18 = $RefreshSig$(),\n    _s19 = $RefreshSig$(),\n    _s20 = $RefreshSig$(),\n    _s21 = $RefreshSig$();\n\nimport { useEffect, useMemo } from 'react';\nimport BigNumber from 'bignumber.js';\nimport { kebabCase } from 'lodash';\nimport { useWeb3React } from '@web3-react/core';\nimport { toastTypes } from '@pancakeswap-libs/uikit';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getWeb3NoAccount } from 'utils/web3';\nimport useRefresh from 'hooks/useRefresh';\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync, push as pushToast, remove as removeToast, clear as clearToast, setBlock } from './actions';\nimport { fetchProfile } from './profile';\nimport { fetchTeam, fetchTeams } from './teams';\nimport { fetchAchievements } from './achievements';\nimport { fetchPrices } from './prices';\nimport useGetPriceData from '../components/Menu/getPrice';\nconst ZERO = new BigNumber(0);\nexport const useFetchPublicData = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    slowRefresh\n  } = useRefresh();\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync());\n    dispatch(fetchPoolsPublicDataAsync());\n  }, [dispatch, slowRefresh]);\n  useEffect(() => {\n    const web3 = getWeb3NoAccount();\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber();\n      dispatch(setBlock(blockNumber));\n    }, 6000);\n    return () => clearInterval(interval);\n  }, [dispatch]);\n}; // Farms\n\n_s(useFetchPublicData, \"wuS4Y8EKVAeAtW/NPPlvO8B968o=\", false, function () {\n  return [useDispatch, useRefresh];\n});\n\nexport const useFarms = () => {\n  _s2();\n\n  const farms = useSelector(state => state.farms.data);\n  return farms;\n};\n\n_s2(useFarms, \"40tjDYBLbzKzCIdd0cwm+UIfe9E=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFarmFromPid = pid => {\n  _s3();\n\n  const farm = useSelector(state => state.farms.data.find(f => f.pid === pid));\n  return farm;\n};\n\n_s3(useFarmFromPid, \"TOdL9+Oz8AEj+wmjEA7Olv/caxU=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFarmFromSymbol = lpSymbol => {\n  _s4();\n\n  const farm = useSelector(state => state.farms.data.find(f => f.lpSymbol === lpSymbol));\n  return farm;\n};\n\n_s4(useFarmFromSymbol, \"TOdL9+Oz8AEj+wmjEA7Olv/caxU=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFarmUser = pid => {\n  _s5();\n\n  const farm = useFarmFromPid(pid);\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0)\n  };\n}; // Pools\n\n_s5(useFarmUser, \"kxbBDHm0i5EJweIp+RPzOgw8PRU=\", false, function () {\n  return [useFarmFromPid];\n});\n\nexport const usePools = account => {\n  _s6();\n\n  const {\n    fastRefresh\n  } = useRefresh();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account));\n    }\n  }, [account, dispatch, fastRefresh]);\n  const pools = useSelector(state => state.pools.data);\n  return pools;\n};\n\n_s6(usePools, \"WIyMD4ufrhPkRVRaHSFmHSaimvo=\", false, function () {\n  return [useRefresh, useDispatch, useSelector];\n});\n\nexport const usePoolFromPid = sousId => {\n  _s7();\n\n  const pool = useSelector(state => state.pools.data.find(p => p.sousId === sousId));\n  return pool;\n}; // Prices\n\n_s7(usePoolFromPid, \"NElEvYvoNsaNFrfsmEnHfa4jRII=\", false, function () {\n  return [useSelector];\n});\n\nexport const usePriceBnbBusd = () => {\n  _s8();\n\n  // const pid = 2 // BUSD-BNB LP\n  // @ts-ignore\n  const priceData = useGetPriceData(); // @ts-ignore\n\n  const priceData2 = new BigNumber(priceData);\n  return priceData2;\n};\n\n_s8(usePriceBnbBusd, \"spJ4S5otF/M8cJvhPlTiay6oz/Y=\", false, function () {\n  return [useGetPriceData];\n});\n\nexport const usePriceCakeBusd = () => {\n  _s9();\n\n  // const pid = 1 // QUESTIONMARK-BNB LP\n  const pid = 1; // const bnbPriceUSD = usePriceBnbBusd()\n\n  let priceData = useGetPriceData(); // @ts-ignore  \n\n  priceData = new BigNumber(priceData);\n  const farm = useFarmFromPid(pid); //  @ts-ignore\n\n  return farm.tokenPriceVsQuote ? priceData.times(farm.tokenPriceVsQuote) : ZERO;\n};\n\n_s9(usePriceCakeBusd, \"jff6Ei+rwKHg390ni8cJFt6EPMM=\", false, function () {\n  return [useGetPriceData, useFarmFromPid];\n});\n\nexport const usePriceEthBusd = () => {\n  _s10();\n\n  // const pid = 14 // ETH-BNB LP\n  const pid = 0;\n  const bnbPriceUSD = usePriceBnbBusd();\n  const farm = useFarmFromPid(pid);\n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO;\n}; // Toasts\n\n_s10(usePriceEthBusd, \"XFAtU4CCq8QZhqqSng08R0qLgoc=\", false, function () {\n  return [usePriceBnbBusd, useFarmFromPid];\n});\n\nexport const useToast = () => {\n  _s11();\n\n  const dispatch = useDispatch();\n  const helpers = useMemo(() => {\n    const push = toast => dispatch(pushToast(toast));\n\n    return {\n      toastError: (title, description) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.DANGER,\n          title,\n          description\n        });\n      },\n      toastInfo: (title, description) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.INFO,\n          title,\n          description\n        });\n      },\n      toastSuccess: (title, description) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.SUCCESS,\n          title,\n          description\n        });\n      },\n      toastWarning: (title, description) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.WARNING,\n          title,\n          description\n        });\n      },\n      push,\n      remove: id => dispatch(removeToast(id)),\n      clear: () => dispatch(clearToast())\n    };\n  }, [dispatch]);\n  return helpers;\n}; // Profile\n\n_s11(useToast, \"sUDVWQm6KuNx8WS5X7Vf7K7gwmw=\", false, function () {\n  return [useDispatch];\n});\n\nexport const useFetchProfile = () => {\n  _s12();\n\n  const {\n    account\n  } = useWeb3React();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchProfile(account));\n  }, [account, dispatch]);\n};\n\n_s12(useFetchProfile, \"vU9PSvh4B+dXA6jrPCjdHHFXuTY=\", false, function () {\n  return [useWeb3React, useDispatch];\n});\n\nexport const useProfile = () => {\n  _s13();\n\n  const {\n    isInitialized,\n    isLoading,\n    data,\n    hasRegistered\n  } = useSelector(state => state.profile);\n  return {\n    profile: data,\n    hasProfile: isInitialized && hasRegistered,\n    isInitialized,\n    isLoading\n  };\n}; // Teams\n\n_s13(useProfile, \"IKFRbj5HxYVQqavhAzR0F+CGiS4=\", false, function () {\n  return [useSelector];\n});\n\nexport const useTeam = id => {\n  _s14();\n\n  const team = useSelector(state => state.teams.data[id]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchTeam(id));\n  }, [id, dispatch]);\n  return team;\n};\n\n_s14(useTeam, \"6Ydgnb/W+c1o8rmdL98MENaH9iY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\nexport const useTeams = () => {\n  _s15();\n\n  const {\n    isInitialized,\n    isLoading,\n    data\n  } = useSelector(state => state.teams);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchTeams());\n  }, [dispatch]);\n  return {\n    teams: data,\n    isInitialized,\n    isLoading\n  };\n}; // Achievements\n\n_s15(useTeams, \"vMuTF9KT93zJ/SDKYNNM9rZzenw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\nexport const useFetchAchievements = () => {\n  _s16();\n\n  const {\n    account\n  } = useWeb3React();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account));\n    }\n  }, [account, dispatch]);\n};\n\n_s16(useFetchAchievements, \"vU9PSvh4B+dXA6jrPCjdHHFXuTY=\", false, function () {\n  return [useWeb3React, useDispatch];\n});\n\nexport const useAchievements = () => {\n  _s17();\n\n  const achievements = useSelector(state => state.achievements.data);\n  return achievements;\n}; // Prices\n\n_s17(useAchievements, \"YSK51t5rwnyiHZ93Q8BnGfHM9jA=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFetchPriceList = () => {\n  _s18();\n\n  const {\n    slowRefresh\n  } = useRefresh();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchPrices());\n  }, [dispatch, slowRefresh]);\n};\n\n_s18(useFetchPriceList, \"ODIO3TDCpvQIMp0pAFTOj2x4j3w=\", false, function () {\n  return [useRefresh, useDispatch];\n});\n\nexport const useGetApiPrices = () => {\n  _s19();\n\n  const prices = useSelector(state => state.prices.data);\n  return prices;\n};\n\n_s19(useGetApiPrices, \"FfFSnB6kLWyrPuGGju2q0Rwh7JY=\", false, function () {\n  return [useSelector];\n});\n\nexport const useGetApiPrice = token => {\n  _s20();\n\n  const prices = useGetApiPrices();\n\n  if (!prices) {\n    return null;\n  }\n\n  return prices[token.toLowerCase()];\n}; // Block\n\n_s20(useGetApiPrice, \"4RSofgi5q8qs6bn/kfSx+OTTFNc=\", false, function () {\n  return [useGetApiPrices];\n});\n\nexport const useBlock = () => {\n  _s21();\n\n  return useSelector(state => state.block);\n};\n\n_s21(useBlock, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});","map":{"version":3,"sources":["/Volumes/evo970/mega/answers/src/state/hooks.ts"],"names":["useEffect","useMemo","BigNumber","kebabCase","useWeb3React","toastTypes","useSelector","useDispatch","getWeb3NoAccount","useRefresh","fetchFarmsPublicDataAsync","fetchPoolsPublicDataAsync","fetchPoolsUserDataAsync","push","pushToast","remove","removeToast","clear","clearToast","setBlock","fetchProfile","fetchTeam","fetchTeams","fetchAchievements","fetchPrices","useGetPriceData","ZERO","useFetchPublicData","dispatch","slowRefresh","web3","interval","setInterval","blockNumber","eth","getBlockNumber","clearInterval","useFarms","farms","state","data","useFarmFromPid","pid","farm","find","f","useFarmFromSymbol","lpSymbol","useFarmUser","allowance","userData","tokenBalance","stakedBalance","earnings","usePools","account","fastRefresh","pools","usePoolFromPid","sousId","pool","p","usePriceBnbBusd","priceData","priceData2","usePriceCakeBusd","tokenPriceVsQuote","times","usePriceEthBusd","bnbPriceUSD","useToast","helpers","toast","toastError","title","description","id","type","DANGER","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","useFetchProfile","useProfile","isInitialized","isLoading","hasRegistered","profile","hasProfile","useTeam","team","teams","useTeams","useFetchAchievements","useAchievements","achievements","useFetchPriceList","useGetApiPrices","prices","useGetApiPrice","token","toLowerCase","useBlock","block"],"mappings":"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","sourcesContent":["import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { kebabCase } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { Toast, toastTypes } from '@pancakeswap-libs/uikit'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Team } from 'config/constants/types'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchFarmsPublicDataAsync,\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  push as pushToast,\n  remove as removeToast,\n  clear as clearToast,\n  setBlock,\n} from './actions'\nimport { State, Farm, Pool, Block, ProfileState, TeamsState, AchievementState, PriceState } from './types'\nimport { fetchProfile } from './profile'\nimport { fetchTeam, fetchTeams } from './teams'\nimport { fetchAchievements } from './achievements'\nimport { fetchPrices } from './prices'\nimport useGetPriceData from '../components/Menu/getPrice'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n\n  useEffect(() => {\n    const web3 = getWeb3NoAccount()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Prices\n\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  // const pid = 2 // BUSD-BNB LP\n  // @ts-ignore\n  const priceData = useGetPriceData()\n\n  // @ts-ignore\n  const priceData2 = new BigNumber(priceData)\n\n  return priceData2;\n\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  // const pid = 1 // QUESTIONMARK-BNB LP\n  const pid = 1;\n  // const bnbPriceUSD = usePriceBnbBusd()\n\n  let priceData = useGetPriceData()\n\n  // @ts-ignore  \n  priceData = new BigNumber(priceData)\n\n  const farm = useFarmFromPid(pid)\n\n  //  @ts-ignore\n  return farm.tokenPriceVsQuote ? priceData.times(farm.tokenPriceVsQuote) : ZERO\n  \n}\n\nexport const usePriceEthBusd = (): BigNumber => {\n  // const pid = 14 // ETH-BNB LP\n  const pid = 0\n  const bnbPriceUSD = usePriceBnbBusd()\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n}\n\n// Toasts\nexport const useToast = () => {\n  const dispatch = useDispatch()\n  const helpers = useMemo(() => {\n    const push = (toast: Toast) => dispatch(pushToast(toast))\n\n    return {\n      toastError: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.DANGER, title, description })\n      },\n      toastInfo: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.INFO, title, description })\n      },\n      toastSuccess: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.SUCCESS, title, description })\n      },\n      toastWarning: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.WARNING, title, description })\n      },\n      push,\n      remove: (id: string) => dispatch(removeToast(id)),\n      clear: () => dispatch(clearToast()),\n    }\n  }, [dispatch])\n\n  return helpers\n}\n\n// Profile\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\n// Teams\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n\n// Achievements\n\nexport const useFetchAchievements = () => {\n  const { account } = useWeb3React()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n\n// Prices\nexport const useFetchPriceList = () => {\n  const { slowRefresh } = useRefresh()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchPrices())\n  }, [dispatch, slowRefresh])\n}\n\nexport const useGetApiPrices = () => {\n  const prices: PriceState['data'] = useSelector((state: State) => state.prices.data)\n  return prices\n}\n\nexport const useGetApiPrice = (token: string) => {\n  const prices = useGetApiPrices()\n\n  if (!prices) {\n    return null\n  }\n\n  return prices[token.toLowerCase()]\n}\n\n// Block\nexport const useBlock = (): Block => {\n  return useSelector((state: State) => state.block)\n}\n"]},"metadata":{},"sourceType":"module"}