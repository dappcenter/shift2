{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/mega/answers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef}from'react';import{useLocation}from'react-router-dom';import{useWeb3React}from'@web3-react/core';import{useModal}from'@pancakeswap-libs/uikit';import useGetBullHiccupClaimableStatus from'../hooks/useGetBullHiccupClaimableStatus';import ClaimBullHiccupNftModal from'./ClaimBullHiccupNftModal';/**\n * This is represented as a component rather than a hook because we need to keep it\n * inside the Router.\n *\n * TODO: Put global checks in redux or make a generic area to house global checks\n */import{jsx as _jsx}from\"react/jsx-runtime\";var GlobalCheckBullHiccupClaimStatus=function GlobalCheckBullHiccupClaimStatus(){var hasDisplayedModal=useRef(false);var _useGetBullHiccupClai=useGetBullHiccupClaimableStatus(),isSomeClaimable=_useGetBullHiccupClai.isSomeClaimable,isBullClaimable=_useGetBullHiccupClai.isBullClaimable,isHiccupClaimable=_useGetBullHiccupClai.isHiccupClaimable;var _useModal=useModal(/*#__PURE__*/_jsx(ClaimBullHiccupNftModal,{isBullClaimable:isBullClaimable,isHiccupClaimable:isHiccupClaimable})),_useModal2=_slicedToArray(_useModal,1),onPresentGiftModal=_useModal2[0];var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useLocation=useLocation(),pathname=_useLocation.pathname;useEffect(function(){if(!pathname.includes('/collectibles')&&isSomeClaimable&&!hasDisplayedModal.current){onPresentGiftModal();hasDisplayedModal.current=true;}},[pathname,isSomeClaimable,hasDisplayedModal,onPresentGiftModal]);// Reset the check flag when account changes\nuseEffect(function(){hasDisplayedModal.current=false;},[account,hasDisplayedModal]);return null;};export default GlobalCheckBullHiccupClaimStatus;","map":{"version":3,"sources":["/Volumes/evo970/mega/answers/src/views/Collectibles/components/GlobalCheckBullHiccupClaimStatus.tsx"],"names":["React","useEffect","useRef","useLocation","useWeb3React","useModal","useGetBullHiccupClaimableStatus","ClaimBullHiccupNftModal","GlobalCheckBullHiccupClaimStatus","hasDisplayedModal","isSomeClaimable","isBullClaimable","isHiccupClaimable","onPresentGiftModal","account","pathname","includes","current"],"mappings":"mJAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,KAAyC,OAAzC,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,OAASC,QAAT,KAAyB,yBAAzB,CACA,MAAOC,CAAAA,+BAAP,KAA4C,0CAA5C,CACA,MAAOC,CAAAA,uBAAP,KAAoC,2BAApC,CAEA;AACA;AACA;AACA;AACA;AACA,G,2CACA,GAAMC,CAAAA,gCAAgC,CAAG,QAAnCA,CAAAA,gCAAmC,EAAM,CAC7C,GAAMC,CAAAA,iBAAiB,CAAGP,MAAM,CAAC,KAAD,CAAhC,CAD6C,0BAEmBI,+BAA+B,EAFlD,CAErCI,eAFqC,uBAErCA,eAFqC,CAEpBC,eAFoB,uBAEpBA,eAFoB,CAEHC,iBAFG,uBAEHA,iBAFG,eAGhBP,QAAQ,cACnC,KAAC,uBAAD,EAAyB,eAAe,CAAEM,eAA1C,CAA2D,iBAAiB,CAAEC,iBAA9E,EADmC,CAHQ,wCAGtCC,kBAHsC,iCAMzBT,YAAY,EANa,CAMrCU,OANqC,eAMrCA,OANqC,kBAOxBX,WAAW,EAPa,CAOrCY,QAPqC,cAOrCA,QAPqC,CAS7Cd,SAAS,CAAC,UAAM,CACd,GAAI,CAACc,QAAQ,CAACC,QAAT,CAAkB,eAAlB,CAAD,EAAuCN,eAAvC,EAA0D,CAACD,iBAAiB,CAACQ,OAAjF,CAA0F,CACxFJ,kBAAkB,GAClBJ,iBAAiB,CAACQ,OAAlB,CAA4B,IAA5B,CACD,CACF,CALQ,CAKN,CAACF,QAAD,CAAWL,eAAX,CAA4BD,iBAA5B,CAA+CI,kBAA/C,CALM,CAAT,CAOA;AACAZ,SAAS,CAAC,UAAM,CACdQ,iBAAiB,CAACQ,OAAlB,CAA4B,KAA5B,CACD,CAFQ,CAEN,CAACH,OAAD,CAAUL,iBAAV,CAFM,CAAT,CAIA,MAAO,KAAP,CACD,CAtBD,CAwBA,cAAeD,CAAAA,gCAAf","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport { useModal } from '@pancakeswap-libs/uikit'\nimport useGetBullHiccupClaimableStatus from '../hooks/useGetBullHiccupClaimableStatus'\nimport ClaimBullHiccupNftModal from './ClaimBullHiccupNftModal'\n\n/**\n * This is represented as a component rather than a hook because we need to keep it\n * inside the Router.\n *\n * TODO: Put global checks in redux or make a generic area to house global checks\n */\nconst GlobalCheckBullHiccupClaimStatus = () => {\n  const hasDisplayedModal = useRef(false)\n  const { isSomeClaimable, isBullClaimable, isHiccupClaimable } = useGetBullHiccupClaimableStatus()\n  const [onPresentGiftModal] = useModal(\n    <ClaimBullHiccupNftModal isBullClaimable={isBullClaimable} isHiccupClaimable={isHiccupClaimable} />,\n  )\n  const { account } = useWeb3React()\n  const { pathname } = useLocation()\n\n  useEffect(() => {\n    if (!pathname.includes('/collectibles') && isSomeClaimable && !hasDisplayedModal.current) {\n      onPresentGiftModal()\n      hasDisplayedModal.current = true\n    }\n  }, [pathname, isSomeClaimable, hasDisplayedModal, onPresentGiftModal])\n\n  // Reset the check flag when account changes\n  useEffect(() => {\n    hasDisplayedModal.current = false\n  }, [account, hasDisplayedModal])\n\n  return null\n}\n\nexport default GlobalCheckBullHiccupClaimStatus\n"]},"metadata":{},"sourceType":"module"}