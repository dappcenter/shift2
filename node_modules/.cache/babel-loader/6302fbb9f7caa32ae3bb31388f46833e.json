{"ast":null,"code":"import _regeneratorRuntime from\"/Users/rp/Desktop/shift2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/rp/Desktop/shift2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/rp/Desktop/shift2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useEffect}from'react';import{useWeb3React}from'@web3-react/core';import{Button}from'@pancakeswap-libs/uikit';import BigNumber from'bignumber.js';import{getBalanceNumber}from'utils/formatBalance';import{useHarvest}from'hooks/useHarvest';import useI18n from'hooks/useI18n';import{usePriceCakeBusd}from'state/hooks';import{useCountUp}from'react-countup';import{ActionContainer,ActionTitles,Title,Subtle,ActionContent,Earned,Staked}from'./styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var HarvestAction=function HarvestAction(_ref){var pid=_ref.pid,userData=_ref.userData;var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var earningsBigNumber=userData&&account?new BigNumber(userData.earnings):null;var cakePrice=usePriceCakeBusd();var earnings=null;var earningsBusd=0;var displayBalance='? ? ?';if(earningsBigNumber){earnings=getBalanceNumber(earningsBigNumber);earningsBusd=new BigNumber(earnings).multipliedBy(cakePrice).toNumber();displayBalance=earnings.toLocaleString();}var _useState=useState(false),_useState2=_slicedToArray(_useState,2),pendingTx=_useState2[0],setPendingTx=_useState2[1];var _useHarvest=useHarvest(pid),onReward=_useHarvest.onReward;var TranslateString=useI18n();var _useCountUp=useCountUp({start:0,end:earningsBusd,duration:1,separator:',',decimals:3}),countUp=_useCountUp.countUp,update=_useCountUp.update;var updateValue=useRef(update);useEffect(function(){updateValue.current(earningsBusd);},[earningsBusd,updateValue]);return/*#__PURE__*/_jsxs(ActionContainer,{children:[/*#__PURE__*/_jsxs(ActionTitles,{children:[/*#__PURE__*/_jsx(Title,{children:\"SHIFT \"}),/*#__PURE__*/_jsx(Subtle,{children:\"EARNED\"})]}),/*#__PURE__*/_jsxs(ActionContent,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Earned,{children:displayBalance}),/*#__PURE__*/_jsxs(Staked,{children:[\"~\",countUp,\"USD\"]})]}),/*#__PURE__*/_jsx(Button,{disabled:!earnings||pendingTx||!account,onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setPendingTx(true);_context.next=3;return onReward();case 3:setPendingTx(false);case 4:case\"end\":return _context.stop();}}},_callee);})),ml:\"4px\",children:TranslateString(999,'Harvest')})]})]});};export default HarvestAction;","map":{"version":3,"sources":["/Users/rp/Desktop/shift2/src/views/Farms/components/FarmTable/Actions/HarvestAction.tsx"],"names":["React","useState","useRef","useEffect","useWeb3React","Button","BigNumber","getBalanceNumber","useHarvest","useI18n","usePriceCakeBusd","useCountUp","ActionContainer","ActionTitles","Title","Subtle","ActionContent","Earned","Staked","HarvestAction","pid","userData","account","earningsBigNumber","earnings","cakePrice","earningsBusd","displayBalance","multipliedBy","toNumber","toLocaleString","pendingTx","setPendingTx","onReward","TranslateString","start","end","duration","separator","decimals","countUp","update","updateValue","current"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useHarvest } from 'hooks/useHarvest'\nimport useI18n from 'hooks/useI18n'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { useCountUp } from 'react-countup'\n\nimport { ActionContainer, ActionTitles, Title, Subtle, ActionContent, Earned, Staked } from './styles'\n\nconst HarvestAction: React.FunctionComponent<FarmWithStakedValue> = ({ pid, userData }) => {\n  const { account } = useWeb3React()\n  const earningsBigNumber = userData && account ? new BigNumber(userData.earnings) : null\n  const cakePrice = usePriceCakeBusd()\n  let earnings = null\n  let earningsBusd = 0\n  let displayBalance = '? ? ?'\n\n  if (earningsBigNumber) {\n    earnings = getBalanceNumber(earningsBigNumber)\n    earningsBusd = new BigNumber(earnings).multipliedBy(cakePrice).toNumber()\n    displayBalance = earnings.toLocaleString()\n  }\n\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(pid)\n  const TranslateString = useI18n()\n\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: earningsBusd,\n    duration: 1,\n    separator: ',',\n    decimals: 3,\n  })\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(earningsBusd)\n  }, [earningsBusd, updateValue])\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Title>SHIFT </Title>\n        <Subtle>EARNED</Subtle>\n      </ActionTitles>\n      <ActionContent>\n        <div>\n          <Earned>{displayBalance}</Earned>\n          <Staked>~{countUp}USD</Staked>\n        </div>\n        <Button\n          disabled={!earnings || pendingTx || !account}\n          onClick={async () => {\n            setPendingTx(true)\n            await onReward()\n            setPendingTx(false)\n          }}\n          ml=\"4px\"\n        >\n          {TranslateString(999, 'Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n"]},"metadata":{},"sourceType":"module"}