{"ast":null,"code":"import{useContext}from'react';import{isEmpty}from'lodash';import{TranslationsContext}from'../contexts/Localisation/translationsContext';var useI18n=function useI18n(){var _useContext=useContext(TranslationsContext),translations=_useContext.translations;return function(translationId,fallback){var data=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};if(translations.length===0){return fallback;}var foundTranslation=translations.find(function(translation){return translation.data.stringId===translationId;});if(foundTranslation){var text=foundTranslation.data.text;var includesVariable=text.includes('%');if(includesVariable){var interpolatedText=text;// If dynamic tags are found but no data was passed return the fallback\nif(isEmpty(data)){return fallback;}Object.keys(data).forEach(function(dataKey){var templateKey=new RegExp(\"%\".concat(dataKey,\"%\"),'g');interpolatedText=interpolatedText.replace(templateKey,data[dataKey]);});return interpolatedText;}return text;}return fallback;};};export default useI18n;","map":{"version":3,"sources":["/Volumes/evo970/shift2-fcb8bc041d1fedb7988290b70457fa426765e2f4/src/hooks/useI18n.ts"],"names":["useContext","isEmpty","TranslationsContext","useI18n","translations","translationId","fallback","data","length","foundTranslation","find","translation","stringId","text","includesVariable","includes","interpolatedText","Object","keys","forEach","dataKey","templateKey","RegExp","replace"],"mappings":"AAAA,OAASA,UAAT,KAA2B,OAA3B,CACA,OAASC,OAAT,KAAwB,QAAxB,CACA,OAASC,mBAAT,KAAoC,8CAApC,CAMA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,iBACKH,UAAU,CAACE,mBAAD,CADf,CACZE,YADY,aACZA,YADY,CAGpB,MAAO,UAACC,aAAD,CAAwBC,QAAxB,CAAqE,IAA3BC,CAAAA,IAA2B,2DAAP,EAAO,CAC1E,GAAIH,YAAY,CAACI,MAAb,GAAwB,CAA5B,CAA+B,CAC7B,MAAOF,CAAAA,QAAP,CACD,CAED,GAAMG,CAAAA,gBAAgB,CAAGL,YAAY,CAACM,IAAb,CAAkB,SAACC,WAAD,CAAiB,CAC1D,MAAOA,CAAAA,WAAW,CAACJ,IAAZ,CAAiBK,QAAjB,GAA8BP,aAArC,CACD,CAFwB,CAAzB,CAIA,GAAII,gBAAJ,CAAsB,IACZI,CAAAA,IADY,CACHJ,gBAAgB,CAACF,IADd,CACZM,IADY,CAEpB,GAAMC,CAAAA,gBAAgB,CAAGD,IAAI,CAACE,QAAL,CAAc,GAAd,CAAzB,CAEA,GAAID,gBAAJ,CAAsB,CACpB,GAAIE,CAAAA,gBAAgB,CAAGH,IAAvB,CAEA;AACA,GAAIZ,OAAO,CAACM,IAAD,CAAX,CAAmB,CACjB,MAAOD,CAAAA,QAAP,CACD,CAEDW,MAAM,CAACC,IAAP,CAAYX,IAAZ,EAAkBY,OAAlB,CAA0B,SAACC,OAAD,CAAa,CACrC,GAAMC,CAAAA,WAAW,CAAG,GAAIC,CAAAA,MAAJ,YAAeF,OAAf,MAA2B,GAA3B,CAApB,CACAJ,gBAAgB,CAAGA,gBAAgB,CAACO,OAAjB,CAAyBF,WAAzB,CAAsCd,IAAI,CAACa,OAAD,CAA1C,CAAnB,CACD,CAHD,EAKA,MAAOJ,CAAAA,gBAAP,CACD,CAED,MAAOH,CAAAA,IAAP,CACD,CAED,MAAOP,CAAAA,QAAP,CACD,CAjCD,CAkCD,CArCD,CAuCA,cAAeH,CAAAA,OAAf","sourcesContent":["import { useContext } from 'react'\nimport { isEmpty } from 'lodash'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\ninterface ContextData {\n  [key: string]: number | string\n}\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string, data: ContextData = {}) => {\n    if (translations.length === 0) {\n      return fallback\n    }\n\n    const foundTranslation = translations.find((translation) => {\n      return translation.data.stringId === translationId\n    })\n\n    if (foundTranslation) {\n      const { text } = foundTranslation.data\n      const includesVariable = text.includes('%')\n\n      if (includesVariable) {\n        let interpolatedText = text\n\n        // If dynamic tags are found but no data was passed return the fallback\n        if (isEmpty(data)) {\n          return fallback\n        }\n\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey])\n        })\n\n        return interpolatedText\n      }\n\n      return text\n    }\n\n    return fallback\n  }\n}\n\nexport default useI18n\n"]},"metadata":{},"sourceType":"module"}