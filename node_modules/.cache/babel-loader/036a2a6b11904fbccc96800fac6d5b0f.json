{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/rp/Desktop/shift2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React from\"react\";import{Card,CardBody,Heading,Text}from\"@pancakeswap-libs/uikit\";import styled from\"styled-components\";import{getBalanceNumber}from\"utils/formatBalance\";import{useTotalSupply,useBurnedBalance}from\"hooks/useTokenBalance\";import useI18n from\"hooks/useI18n\";import{getCakeAddress}from\"utils/addressHelpers\";import CardValue from\"./CardValue\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledCakeStats=styled(Card)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  margin-left: auto;\\n  margin-right: auto;\\n  text-color: #ffffff;\\n\"])));var Row=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  display: flex;\\n  font-size: 14px;\\n  color: #ffffff;\\n  justify-content: space-between;\\n  margin-bottom: 8px;\\n\"])));var CakeStats=function CakeStats(){var TranslateString=useI18n();var totalSupply=useTotalSupply();var burnedBalance=getBalanceNumber(useBurnedBalance(getCakeAddress()));var cakeSupply=totalSupply?getBalanceNumber(totalSupply)-burnedBalance:0;return/*#__PURE__*/_jsx(StyledCakeStats,{children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Heading,{size:\"xl\",mb:\"24px\",children:TranslateString(534,\"SHIFT Stats\")}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",color:\"#FFFFFF\",children:TranslateString(536,\"Total SHIFT Supply\")}),cakeSupply&&/*#__PURE__*/_jsx(CardValue,{fontSize:\"14px\",color:\"#FFFFFF\",value:cakeSupply})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",color:\"#FFFFFF\",children:TranslateString(538,\"Total SHIFT Burned\")}),/*#__PURE__*/_jsx(CardValue,{fontSize:\"14px\",color:\"#FFFFFF\",decimals:0,value:burnedBalance})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",color:\"#FFFFFF\",children:TranslateString(540,\"New SHIFT/block\")}),/*#__PURE__*/_jsx(CardValue,{fontSize:\"14px\",color:\"#FFFFFF\",decimals:0,value:8})]})]})});};export default CakeStats;","map":{"version":3,"sources":["/Users/rp/Desktop/shift2/src/views/Home/components/CakeStats.tsx"],"names":["React","Card","CardBody","Heading","Text","styled","getBalanceNumber","useTotalSupply","useBurnedBalance","useI18n","getCakeAddress","CardValue","StyledCakeStats","Row","div","CakeStats","TranslateString","totalSupply","burnedBalance","cakeSupply"],"mappings":"oMAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,QAAf,CAAyBC,OAAzB,CAAkCC,IAAlC,KAA8C,yBAA9C,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,gBAAT,KAAiC,qBAAjC,CACA,OAASC,cAAT,CAAyBC,gBAAzB,KAAiD,uBAAjD,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,OAASC,cAAT,KAA+B,sBAA/B,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,C,wFAEA,GAAMC,CAAAA,eAAe,CAAGP,MAAM,CAACJ,IAAD,CAAT,wIAArB,CAMA,GAAMY,CAAAA,GAAG,CAAGR,MAAM,CAACS,GAAV,gNAAT,CASA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,GAAMC,CAAAA,eAAe,CAAGP,OAAO,EAA/B,CACA,GAAMQ,CAAAA,WAAW,CAAGV,cAAc,EAAlC,CACA,GAAMW,CAAAA,aAAa,CAAGZ,gBAAgB,CAACE,gBAAgB,CAACE,cAAc,EAAf,CAAjB,CAAtC,CACA,GAAMS,CAAAA,UAAU,CAAGF,WAAW,CAC1BX,gBAAgB,CAACW,WAAD,CAAhB,CAAgCC,aADN,CAE1B,CAFJ,CAIA,mBACE,KAAC,eAAD,wBACE,MAAC,QAAD,yBACE,KAAC,OAAD,EAAS,IAAI,CAAC,IAAd,CAAmB,EAAE,CAAC,MAAtB,UACGF,eAAe,CAAC,GAAD,CAAM,aAAN,CADlB,EADF,cAIE,MAAC,GAAD,yBACE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,CAAsB,KAAK,CAAC,SAA5B,UACGA,eAAe,CAAC,GAAD,CAAM,oBAAN,CADlB,EADF,CAIGG,UAAU,eACT,KAAC,SAAD,EAAW,QAAQ,CAAC,MAApB,CAA2B,KAAK,CAAC,SAAjC,CAA2C,KAAK,CAAEA,UAAlD,EALJ,GAJF,cAYE,MAAC,GAAD,yBACE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,CAAsB,KAAK,CAAC,SAA5B,UACGH,eAAe,CAAC,GAAD,CAAM,oBAAN,CADlB,EADF,cAIE,KAAC,SAAD,EACE,QAAQ,CAAC,MADX,CAEE,KAAK,CAAC,SAFR,CAGE,QAAQ,CAAE,CAHZ,CAIE,KAAK,CAAEE,aAJT,EAJF,GAZF,cAuBE,MAAC,GAAD,yBACE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,CAAsB,KAAK,CAAC,SAA5B,UACGF,eAAe,CAAC,GAAD,CAAM,iBAAN,CADlB,EADF,cAIE,KAAC,SAAD,EAAW,QAAQ,CAAC,MAApB,CAA2B,KAAK,CAAC,SAAjC,CAA2C,QAAQ,CAAE,CAArD,CAAwD,KAAK,CAAE,CAA/D,EAJF,GAvBF,GADF,EADF,CAkCD,CA1CD,CA4CA,cAAeD,CAAAA,SAAf","sourcesContent":["import React from \"react\";\nimport { Card, CardBody, Heading, Text } from \"@pancakeswap-libs/uikit\";\nimport styled from \"styled-components\";\nimport { getBalanceNumber } from \"utils/formatBalance\";\nimport { useTotalSupply, useBurnedBalance } from \"hooks/useTokenBalance\";\nimport useI18n from \"hooks/useI18n\";\nimport { getCakeAddress } from \"utils/addressHelpers\";\nimport CardValue from \"./CardValue\";\n\nconst StyledCakeStats = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n  text-color: #ffffff;\n`;\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  color: #ffffff;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`;\n\nconst CakeStats = () => {\n  const TranslateString = useI18n();\n  const totalSupply = useTotalSupply();\n  const burnedBalance = getBalanceNumber(useBurnedBalance(getCakeAddress()));\n  const cakeSupply = totalSupply\n    ? getBalanceNumber(totalSupply) - burnedBalance\n    : 0;\n\n  return (\n    <StyledCakeStats>\n      <CardBody>\n        <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(534, \"SHIFT Stats\")}\n        </Heading>\n        <Row>\n          <Text fontSize=\"14px\" color=\"#FFFFFF\">\n            {TranslateString(536, \"Total SHIFT Supply\")}\n          </Text>\n          {cakeSupply && (\n            <CardValue fontSize=\"14px\" color=\"#FFFFFF\" value={cakeSupply} />\n          )}\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\" color=\"#FFFFFF\">\n            {TranslateString(538, \"Total SHIFT Burned\")}\n          </Text>\n          <CardValue\n            fontSize=\"14px\"\n            color=\"#FFFFFF\"\n            decimals={0}\n            value={burnedBalance}\n          />\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\" color=\"#FFFFFF\">\n            {TranslateString(540, \"New SHIFT/block\")}\n          </Text>\n          <CardValue fontSize=\"14px\" color=\"#FFFFFF\" decimals={0} value={8} />\n        </Row>\n      </CardBody>\n    </StyledCakeStats>\n  );\n};\n\nexport default CakeStats;\n"]},"metadata":{},"sourceType":"module"}