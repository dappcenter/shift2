{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/ssd500/Answers/answers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/ssd500/Answers/answers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useCallback}from'react';import{useWeb3React}from'@web3-react/core';import{useDispatch}from'react-redux';import{fetchFarmUserDataAsync,updateUserStakedBalance,updateUserBalance}from'state/actions';import{stake,sousStake,sousStakeBnb}from'utils/callHelpers';import{useMasterchef,useSousChef}from'./useContract';var useStake=function useStake(pid){var dispatch=useDispatch();var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var masterChefContract=useMasterchef();var handleStake=useCallback(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(amount){var txHash;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return stake(masterChefContract,pid,amount,account);case 2:txHash=_context.sent;dispatch(fetchFarmUserDataAsync(account));console.info(txHash);case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}(),[account,dispatch,masterChefContract,pid]);return{onStake:handleStake};};export var useSousStake=function useSousStake(sousId){var isUsingBnb=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var dispatch=useDispatch();var _useWeb3React2=useWeb3React(),account=_useWeb3React2.account;var masterChefContract=useMasterchef();var sousChefContract=useSousChef(sousId);var handleStake=useCallback(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(amount,decimals){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(sousId===0)){_context2.next=5;break;}_context2.next=3;return stake(masterChefContract,0,amount,account);case 3:_context2.next=12;break;case 5:if(!isUsingBnb){_context2.next=10;break;}_context2.next=8;return sousStakeBnb(sousChefContract,amount,account);case 8:_context2.next=12;break;case 10:_context2.next=12;return sousStake(sousChefContract,amount,decimals,account);case 12:dispatch(updateUserStakedBalance(sousId,account));dispatch(updateUserBalance(sousId,account));case 14:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2,_x3){return _ref2.apply(this,arguments);};}(),[account,dispatch,isUsingBnb,masterChefContract,sousChefContract,sousId]);return{onStake:handleStake};};export default useStake;","map":{"version":3,"sources":["/Volumes/ssd500/Answers/answers/src/hooks/useStake.ts"],"names":["useCallback","useWeb3React","useDispatch","fetchFarmUserDataAsync","updateUserStakedBalance","updateUserBalance","stake","sousStake","sousStakeBnb","useMasterchef","useSousChef","useStake","pid","dispatch","account","masterChefContract","handleStake","amount","txHash","console","info","onStake","useSousStake","sousId","isUsingBnb","sousChefContract","decimals"],"mappings":"ySAAA,OAASA,WAAT,KAA4B,OAA5B,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,sBAAT,CAAiCC,uBAAjC,CAA0DC,iBAA1D,KAAmF,eAAnF,CACA,OAASC,KAAT,CAAgBC,SAAhB,CAA2BC,YAA3B,KAA+C,mBAA/C,CACA,OAASC,aAAT,CAAwBC,WAAxB,KAA2C,eAA3C,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,GAAD,CAAiB,CAChC,GAAMC,CAAAA,QAAQ,CAAGX,WAAW,EAA5B,CADgC,kBAEZD,YAAY,EAFA,CAExBa,OAFwB,eAExBA,OAFwB,CAGhC,GAAMC,CAAAA,kBAAkB,CAAGN,aAAa,EAAxC,CAEA,GAAMO,CAAAA,WAAW,CAAGhB,WAAW,0FAC7B,iBAAOiB,MAAP,mJACuBX,CAAAA,KAAK,CAACS,kBAAD,CAAqBH,GAArB,CAA0BK,MAA1B,CAAkCH,OAAlC,CAD5B,QACQI,MADR,eAEEL,QAAQ,CAACV,sBAAsB,CAACW,OAAD,CAAvB,CAAR,CACAK,OAAO,CAACC,IAAR,CAAaF,MAAb,EAHF,sDAD6B,+DAM7B,CAACJ,OAAD,CAAUD,QAAV,CAAoBE,kBAApB,CAAwCH,GAAxC,CAN6B,CAA/B,CASA,MAAO,CAAES,OAAO,CAAEL,WAAX,CAAP,CACD,CAfD,CAiBA,MAAO,IAAMM,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,MAAD,CAAgC,IAAvBC,CAAAA,UAAuB,2DAAV,KAAU,CAC1D,GAAMX,CAAAA,QAAQ,CAAGX,WAAW,EAA5B,CAD0D,mBAEtCD,YAAY,EAF0B,CAElDa,OAFkD,gBAElDA,OAFkD,CAG1D,GAAMC,CAAAA,kBAAkB,CAAGN,aAAa,EAAxC,CACA,GAAMgB,CAAAA,gBAAgB,CAAGf,WAAW,CAACa,MAAD,CAApC,CAEA,GAAMP,CAAAA,WAAW,CAAGhB,WAAW,2FAC7B,kBAAOiB,MAAP,CAAuBS,QAAvB,2HACMH,MAAM,GAAK,CADjB,kDAEUjB,CAAAA,KAAK,CAACS,kBAAD,CAAqB,CAArB,CAAwBE,MAAxB,CAAgCH,OAAhC,CAFf,2CAGaU,UAHb,kDAIUhB,CAAAA,YAAY,CAACiB,gBAAD,CAAmBR,MAAnB,CAA2BH,OAA3B,CAJtB,gEAMUP,CAAAA,SAAS,CAACkB,gBAAD,CAAmBR,MAAnB,CAA2BS,QAA3B,CAAqCZ,OAArC,CANnB,SAQED,QAAQ,CAACT,uBAAuB,CAACmB,MAAD,CAAST,OAAT,CAAxB,CAAR,CACAD,QAAQ,CAACR,iBAAiB,CAACkB,MAAD,CAAST,OAAT,CAAlB,CAAR,CATF,yDAD6B,qEAY7B,CAACA,OAAD,CAAUD,QAAV,CAAoBW,UAApB,CAAgCT,kBAAhC,CAAoDU,gBAApD,CAAsEF,MAAtE,CAZ6B,CAA/B,CAeA,MAAO,CAAEF,OAAO,CAAEL,WAAX,CAAP,CACD,CAtBM,CAwBP,cAAeL,CAAAA,QAAf","sourcesContent":["import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, decimals, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n"]},"metadata":{},"sourceType":"module"}