{"ast":null,"code":"import _taggedTemplateLiteral from\"/Volumes/evo970/shift2-fcb8bc041d1fedb7988290b70457fa426765e2f4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React from'react';import BigNumber from'bignumber.js';import styled from'styled-components';import{Modal,Text,LinkExternal,Flex}from'@pancakeswap-libs/uikit';import useI18n from'hooks/useI18n';import{calculateCakeEarnedPerThousandDollars,apyModalRoi}from'utils/compoundApyHelpers';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Grid=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(3, 1fr);\\n  grid-template-rows: repeat(4, auto);\\n  margin-bottom: 24px;\\n\"])));var GridItem=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  margin-bottom: '10px';\\n\"])));var Description=styled(Text)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  max-width: 320px;\\n  margin-bottom: 28px;\\n\"])));var ApyCalculatorModal=function ApyCalculatorModal(_ref){var onDismiss=_ref.onDismiss,lpLabel=_ref.lpLabel,cakePrice=_ref.cakePrice,apy=_ref.apy,addLiquidityUrl=_ref.addLiquidityUrl;var TranslateString=useI18n();var farmApy=apy.times(new BigNumber(100)).toNumber();var oneThousandDollarsWorthOfCake=1000/cakePrice.toNumber();var cakeEarnedPerThousand1D=calculateCakeEarnedPerThousandDollars({numberOfDays:1,farmApy:farmApy,cakePrice:cakePrice});var cakeEarnedPerThousand7D=calculateCakeEarnedPerThousandDollars({numberOfDays:7,farmApy:farmApy,cakePrice:cakePrice});var cakeEarnedPerThousand30D=calculateCakeEarnedPerThousandDollars({numberOfDays:30,farmApy:farmApy,cakePrice:cakePrice});var cakeEarnedPerThousand365D=calculateCakeEarnedPerThousandDollars({numberOfDays:365,farmApy:farmApy,cakePrice:cakePrice});return/*#__PURE__*/_jsxs(Modal,{title:\"ROI\",onDismiss:onDismiss,children:[/*#__PURE__*/_jsxs(Grid,{children:[/*#__PURE__*/_jsx(GridItem,{children:/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",bold:true,color:\"textSubtle\",textTransform:\"uppercase\",mb:\"20px\",children:TranslateString(860,'Timeframe')})}),/*#__PURE__*/_jsx(GridItem,{children:/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",bold:true,color:\"textSubtle\",textTransform:\"uppercase\",mb:\"20px\",children:TranslateString(858,'ROI')})}),/*#__PURE__*/_jsx(GridItem,{children:/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",bold:true,color:\"textSubtle\",textTransform:\"uppercase\",mb:\"20px\",children:TranslateString(864,'SHIFT per $1000')})}),/*#__PURE__*/_jsx(GridItem,{children:/*#__PURE__*/_jsx(Text,{children:\"1d\"})}),/*#__PURE__*/_jsx(GridItem,{children:/*#__PURE__*/_jsxs(Text,{children:[apyModalRoi({amountEarned:cakeEarnedPerThousand1D,amountInvested:oneThousandDollarsWorthOfCake}),\"%\"]})}),/*#__PURE__*/_jsx(GridItem,{children:/*#__PURE__*/_jsx(Text,{children:cakeEarnedPerThousand1D})}),/*#__PURE__*/_jsx(GridItem,{children:/*#__PURE__*/_jsx(Text,{children:\"7d\"})}),/*#__PURE__*/_jsx(GridItem,{children:/*#__PURE__*/_jsxs(Text,{children:[apyModalRoi({amountEarned:cakeEarnedPerThousand7D,amountInvested:oneThousandDollarsWorthOfCake}),\"%\"]})}),/*#__PURE__*/_jsx(GridItem,{children:/*#__PURE__*/_jsx(Text,{children:cakeEarnedPerThousand7D})}),/*#__PURE__*/_jsx(GridItem,{children:/*#__PURE__*/_jsx(Text,{children:\"30d\"})}),/*#__PURE__*/_jsx(GridItem,{children:/*#__PURE__*/_jsxs(Text,{children:[apyModalRoi({amountEarned:cakeEarnedPerThousand30D,amountInvested:oneThousandDollarsWorthOfCake}),\"%\"]})}),/*#__PURE__*/_jsx(GridItem,{children:/*#__PURE__*/_jsx(Text,{children:cakeEarnedPerThousand30D})}),/*#__PURE__*/_jsx(GridItem,{children:/*#__PURE__*/_jsx(Text,{children:\"365d(APY)\"})}),/*#__PURE__*/_jsx(GridItem,{children:/*#__PURE__*/_jsxs(Text,{children:[apyModalRoi({amountEarned:cakeEarnedPerThousand365D,amountInvested:oneThousandDollarsWorthOfCake}),\"%\"]})}),/*#__PURE__*/_jsx(GridItem,{children:/*#__PURE__*/_jsx(Text,{children:cakeEarnedPerThousand365D})})]}),/*#__PURE__*/_jsx(Description,{fontSize:\"12px\",color:\"textSubtle\",children:TranslateString(866,'Calculated based on current rates. Compounding once daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.')}),/*#__PURE__*/_jsx(Flex,{justifyContent:\"center\",children:/*#__PURE__*/_jsxs(LinkExternal,{href:addLiquidityUrl,children:[TranslateString(999,'Get'),\" \",lpLabel]})})]});};export default ApyCalculatorModal;","map":{"version":3,"sources":["/Volumes/evo970/shift2-fcb8bc041d1fedb7988290b70457fa426765e2f4/src/views/Farms/components/FarmCard/ApyCalculatorModal.tsx"],"names":["React","BigNumber","styled","Modal","Text","LinkExternal","Flex","useI18n","calculateCakeEarnedPerThousandDollars","apyModalRoi","Grid","div","GridItem","Description","ApyCalculatorModal","onDismiss","lpLabel","cakePrice","apy","addLiquidityUrl","TranslateString","farmApy","times","toNumber","oneThousandDollarsWorthOfCake","cakeEarnedPerThousand1D","numberOfDays","cakeEarnedPerThousand7D","cakeEarnedPerThousand30D","cakeEarnedPerThousand365D","amountEarned","amountInvested"],"mappings":"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","sourcesContent":["import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { calculateCakeEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  lpLabel?: string\n  cakePrice?: BigNumber\n  apy?: BigNumber\n  addLiquidityUrl?: string\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 24px;\n`\n\nconst GridItem = styled.div`\n  margin-bottom: '10px';\n`\n\nconst Description = styled(Text)`\n  max-width: 320px;\n  margin-bottom: 28px;\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  lpLabel,\n  cakePrice,\n  apy,\n  addLiquidityUrl,\n}) => {\n  const TranslateString = useI18n()\n  const farmApy = apy.times(new BigNumber(100)).toNumber()\n  const oneThousandDollarsWorthOfCake = 1000 / cakePrice.toNumber()\n\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 1, farmApy, cakePrice })\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 7, farmApy, cakePrice })\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 30, farmApy, cakePrice })\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 365, farmApy, cakePrice })\n\n  return (\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\n      <Grid>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(860, 'Timeframe')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(858, 'ROI')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(864, 'SHIFT per $1000')}\n          </Text>\n        </GridItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>1d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>7d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>30d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand30D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem>\n          <Text>365d(APY)</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand365D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Description fontSize=\"12px\" color=\"textSubtle\">\n        {TranslateString(\n          866,\n          'Calculated based on current rates. Compounding once daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n        )}\n      </Description>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={addLiquidityUrl}>\n          {TranslateString(999, 'Get')} {lpLabel}\n        </LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n"]},"metadata":{},"sourceType":"module"}