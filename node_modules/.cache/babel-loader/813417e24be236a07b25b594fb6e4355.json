{"ast":null,"code":"import{useEffect}from\"react\";import{connectorLocalStorageKey,ConnectorNames}from\"@pancakeswap-libs/uikit\";import useAuth from\"hooks/useAuth\";var useEagerConnect=function useEagerConnect(){var _useAuth=useAuth(),login=_useAuth.login;useEffect(function(){var connectorId=window.localStorage.getItem(connectorLocalStorageKey);// Disable eager connect for BSC Wallet. Currently the BSC Wallet extension does not inject BinanceChain\n// into the Window object in time causing it to throw an error\n// TODO: Figure out an elegant way to listen for when the BinanceChain object is ready\nif(connectorId&&connectorId!==ConnectorNames.BSC){login(connectorId);}},[login]);};export default useEagerConnect;","map":{"version":3,"sources":["/Users/rp/Desktop/shift2/src/hooks/useEagerConnect.ts"],"names":["useEffect","connectorLocalStorageKey","ConnectorNames","useAuth","useEagerConnect","login","connectorId","window","localStorage","getItem","BSC"],"mappings":"AAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,OACEC,wBADF,CAEEC,cAFF,KAGO,yBAHP,CAIA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,cACVD,OAAO,EADG,CACpBE,KADoB,UACpBA,KADoB,CAG5BL,SAAS,CAAC,UAAM,CACd,GAAMM,CAAAA,WAAW,CAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAClBR,wBADkB,CAApB,CAIA;AACA;AACA;AACA,GAAIK,WAAW,EAAIA,WAAW,GAAKJ,cAAc,CAACQ,GAAlD,CAAuD,CACrDL,KAAK,CAACC,WAAD,CAAL,CACD,CACF,CAXQ,CAWN,CAACD,KAAD,CAXM,CAAT,CAYD,CAfD,CAiBA,cAAeD,CAAAA,eAAf","sourcesContent":["import { useEffect } from \"react\";\nimport {\n  connectorLocalStorageKey,\n  ConnectorNames,\n} from \"@pancakeswap-libs/uikit\";\nimport useAuth from \"hooks/useAuth\";\n\nconst useEagerConnect = () => {\n  const { login } = useAuth();\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(\n      connectorLocalStorageKey\n    ) as ConnectorNames;\n\n    // Disable eager connect for BSC Wallet. Currently the BSC Wallet extension does not inject BinanceChain\n    // into the Window object in time causing it to throw an error\n    // TODO: Figure out an elegant way to listen for when the BinanceChain object is ready\n    if (connectorId && connectorId !== ConnectorNames.BSC) {\n      login(connectorId);\n    }\n  }, [login]);\n};\n\nexport default useEagerConnect;\n"]},"metadata":{},"sourceType":"module"}