{"ast":null,"code":"import _slicedToArray from\"/Users/rp/Desktop/shift2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef}from\"react\";import{useLocation}from\"react-router-dom\";import{useWeb3React}from\"@web3-react/core\";import{useModal}from\"@pancakeswap-libs/uikit\";import useGetBullHiccupClaimableStatus from\"../hooks/useGetBullHiccupClaimableStatus\";import ClaimBullHiccupNftModal from\"./ClaimBullHiccupNftModal\";/**\n * This is represented as a component rather than a hook because we need to keep it\n * inside the Router.\n *\n * TODO: Put global checks in redux or make a generic area to house global checks\n */import{jsx as _jsx}from\"react/jsx-runtime\";var GlobalCheckBullHiccupClaimStatus=function GlobalCheckBullHiccupClaimStatus(){var hasDisplayedModal=useRef(false);var _useGetBullHiccupClai=useGetBullHiccupClaimableStatus(),isSomeClaimable=_useGetBullHiccupClai.isSomeClaimable,isBullClaimable=_useGetBullHiccupClai.isBullClaimable,isHiccupClaimable=_useGetBullHiccupClai.isHiccupClaimable;var _useModal=useModal(/*#__PURE__*/_jsx(ClaimBullHiccupNftModal,{isBullClaimable:isBullClaimable,isHiccupClaimable:isHiccupClaimable})),_useModal2=_slicedToArray(_useModal,1),onPresentGiftModal=_useModal2[0];var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useLocation=useLocation(),pathname=_useLocation.pathname;useEffect(function(){if(!pathname.includes(\"/collectibles\")&&isSomeClaimable&&!hasDisplayedModal.current){onPresentGiftModal();hasDisplayedModal.current=true;}},[pathname,isSomeClaimable,hasDisplayedModal,onPresentGiftModal]);// Reset the check flag when account changes\nuseEffect(function(){hasDisplayedModal.current=false;},[account,hasDisplayedModal]);return null;};export default GlobalCheckBullHiccupClaimStatus;","map":{"version":3,"sources":["/Users/rp/Desktop/shift2/src/views/Collectibles/components/GlobalCheckBullHiccupClaimStatus.tsx"],"names":["React","useEffect","useRef","useLocation","useWeb3React","useModal","useGetBullHiccupClaimableStatus","ClaimBullHiccupNftModal","GlobalCheckBullHiccupClaimStatus","hasDisplayedModal","isSomeClaimable","isBullClaimable","isHiccupClaimable","onPresentGiftModal","account","pathname","includes","current"],"mappings":"+IAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,KAAyC,OAAzC,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,OAASC,QAAT,KAAyB,yBAAzB,CACA,MAAOC,CAAAA,+BAAP,KAA4C,0CAA5C,CACA,MAAOC,CAAAA,uBAAP,KAAoC,2BAApC,CAEA;AACA;AACA;AACA;AACA;AACA,G,2CACA,GAAMC,CAAAA,gCAAgC,CAAG,QAAnCA,CAAAA,gCAAmC,EAAM,CAC7C,GAAMC,CAAAA,iBAAiB,CAAGP,MAAM,CAAC,KAAD,CAAhC,CAD6C,0BAMzCI,+BAA+B,EANU,CAG3CI,eAH2C,uBAG3CA,eAH2C,CAI3CC,eAJ2C,uBAI3CA,eAJ2C,CAK3CC,iBAL2C,uBAK3CA,iBAL2C,eAOhBP,QAAQ,cACnC,KAAC,uBAAD,EACE,eAAe,CAAEM,eADnB,CAEE,iBAAiB,CAAEC,iBAFrB,EADmC,CAPQ,wCAOtCC,kBAPsC,iCAazBT,YAAY,EAba,CAarCU,OAbqC,eAarCA,OAbqC,kBAcxBX,WAAW,EAda,CAcrCY,QAdqC,cAcrCA,QAdqC,CAgB7Cd,SAAS,CAAC,UAAM,CACd,GACE,CAACc,QAAQ,CAACC,QAAT,CAAkB,eAAlB,CAAD,EACAN,eADA,EAEA,CAACD,iBAAiB,CAACQ,OAHrB,CAIE,CACAJ,kBAAkB,GAClBJ,iBAAiB,CAACQ,OAAlB,CAA4B,IAA5B,CACD,CACF,CATQ,CASN,CAACF,QAAD,CAAWL,eAAX,CAA4BD,iBAA5B,CAA+CI,kBAA/C,CATM,CAAT,CAWA;AACAZ,SAAS,CAAC,UAAM,CACdQ,iBAAiB,CAACQ,OAAlB,CAA4B,KAA5B,CACD,CAFQ,CAEN,CAACH,OAAD,CAAUL,iBAAV,CAFM,CAAT,CAIA,MAAO,KAAP,CACD,CAjCD,CAmCA,cAAeD,CAAAA,gCAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useModal } from \"@pancakeswap-libs/uikit\";\nimport useGetBullHiccupClaimableStatus from \"../hooks/useGetBullHiccupClaimableStatus\";\nimport ClaimBullHiccupNftModal from \"./ClaimBullHiccupNftModal\";\n\n/**\n * This is represented as a component rather than a hook because we need to keep it\n * inside the Router.\n *\n * TODO: Put global checks in redux or make a generic area to house global checks\n */\nconst GlobalCheckBullHiccupClaimStatus = () => {\n  const hasDisplayedModal = useRef(false);\n  const {\n    isSomeClaimable,\n    isBullClaimable,\n    isHiccupClaimable,\n  } = useGetBullHiccupClaimableStatus();\n  const [onPresentGiftModal] = useModal(\n    <ClaimBullHiccupNftModal\n      isBullClaimable={isBullClaimable}\n      isHiccupClaimable={isHiccupClaimable}\n    />\n  );\n  const { account } = useWeb3React();\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    if (\n      !pathname.includes(\"/collectibles\") &&\n      isSomeClaimable &&\n      !hasDisplayedModal.current\n    ) {\n      onPresentGiftModal();\n      hasDisplayedModal.current = true;\n    }\n  }, [pathname, isSomeClaimable, hasDisplayedModal, onPresentGiftModal]);\n\n  // Reset the check flag when account changes\n  useEffect(() => {\n    hasDisplayedModal.current = false;\n  }, [account, hasDisplayedModal]);\n\n  return null;\n};\n\nexport default GlobalCheckBullHiccupClaimStatus;\n"]},"metadata":{},"sourceType":"module"}