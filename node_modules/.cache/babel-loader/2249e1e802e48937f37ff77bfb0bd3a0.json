{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/mega/answers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/mega/answers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Volumes/evo970/mega/answers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Volumes/evo970/mega/answers/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;import React,{useState,useCallback}from'react';import styled from'styled-components';import{Heading,Card,CardBody,Button}from'@pancakeswap-libs/uikit';import{useWeb3React}from'@web3-react/core';import useI18n from'hooks/useI18n';import{useAllHarvest}from'hooks/useHarvest';import useFarmsWithBalance from'hooks/useFarmsWithBalance';import UnlockButton from'components/UnlockButton';import CakeHarvestBalance from'./CakeHarvestBalance';import CakeWalletBalance from'./CakeWalletBalance';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledFarmStakingCard=styled(Card)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n\\n  background-repeat: no-repeat;\\n  background-position: top right;\\n  min-height: 376px;\\n\\n\\n\"])));var Block=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  margin-bottom: 16px;\\n\"])));var CardImage=styled.img(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  margin-bottom: 16px;\\n\"])));var Label=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  color: \",\";\\n  font-size: 14px;\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.textSubtle;});var Actions=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  margin-top: 24px;\\n\"])));var FarmedStakingCard=function FarmedStakingCard(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),pendingTx=_useState2[0],setPendingTx=_useState2[1];var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var TranslateString=useI18n();var farmsWithBalance=useFarmsWithBalance();var balancesWithValue=farmsWithBalance.filter(function(balanceType){return balanceType.balance.toNumber()>0;});var _useAllHarvest=useAllHarvest(balancesWithValue.map(function(farmWithBalance){return farmWithBalance.pid;})),onReward=_useAllHarvest.onReward;var harvestAllFarms=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setPendingTx(true);_context.prev=1;_context.next=4;return onReward();case 4:_context.next=8;break;case 6:_context.prev=6;_context.t0=_context[\"catch\"](1);case 8:_context.prev=8;setPendingTx(false);return _context.finish(8);case 11:case\"end\":return _context.stop();}}},_callee,null,[[1,6,8,11]]);})),[onReward]);return/*#__PURE__*/_jsx(StyledFarmStakingCard,{children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Heading,{size:\"xl\",mb:\"24px\",children:TranslateString(542,'Farms & Staking')}),/*#__PURE__*/_jsx(CardImage,{src:\"/images/cake.svg\",alt:\"cake logo\",width:64,height:64}),/*#__PURE__*/_jsxs(Block,{children:[/*#__PURE__*/_jsxs(Label,{children:[TranslateString(544,'? to Harvest'),\":\"]}),/*#__PURE__*/_jsx(CakeHarvestBalance,{})]}),/*#__PURE__*/_jsxs(Block,{children:[/*#__PURE__*/_jsxs(Label,{children:[TranslateString(546,'? in Wallet'),\":\"]}),/*#__PURE__*/_jsx(CakeWalletBalance,{})]}),/*#__PURE__*/_jsx(Actions,{children:account?/*#__PURE__*/_jsx(Button,{id:\"harvest-all\",disabled:balancesWithValue.length<=0||pendingTx,onClick:harvestAllFarms,width:\"100%\",children:pendingTx?TranslateString(548,'Collecting ?'):TranslateString(532,\"Harvest all (\".concat(balancesWithValue.length,\")\"))}):/*#__PURE__*/_jsx(UnlockButton,{width:\"100%\"})})]})});};export default FarmedStakingCard;","map":{"version":3,"sources":["/Volumes/evo970/mega/answers/src/views/Home/components/FarmStakingCard.tsx"],"names":["React","useState","useCallback","styled","Heading","Card","CardBody","Button","useWeb3React","useI18n","useAllHarvest","useFarmsWithBalance","UnlockButton","CakeHarvestBalance","CakeWalletBalance","StyledFarmStakingCard","Block","div","CardImage","img","Label","theme","colors","textSubtle","Actions","FarmedStakingCard","pendingTx","setPendingTx","account","TranslateString","farmsWithBalance","balancesWithValue","filter","balanceType","balance","toNumber","map","farmWithBalance","pid","onReward","harvestAllFarms","length"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Button } from '@pancakeswap-libs/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useAllHarvest } from 'hooks/useHarvest'\r\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport CakeHarvestBalance from './CakeHarvestBalance'\r\nimport CakeWalletBalance from './CakeWalletBalance'\r\n\r\nconst StyledFarmStakingCard = styled(Card)`\r\n\r\n  background-repeat: no-repeat;\r\n  background-position: top right;\r\n  min-height: 376px;\r\n\r\n\r\n`\r\n\r\nconst Block = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst CardImage = styled.img`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Label = styled.div`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 14px;\r\n`\r\n\r\nconst Actions = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst FarmedStakingCard = () => {\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const TranslateString = useI18n()\r\n  const farmsWithBalance = useFarmsWithBalance()\r\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\r\n\r\n  const { onReward } = useAllHarvest(balancesWithValue.map((farmWithBalance) => farmWithBalance.pid))\r\n\r\n  const harvestAllFarms = useCallback(async () => {\r\n    setPendingTx(true)\r\n    try {\r\n      await onReward()\r\n    } catch (error) {\r\n      // TODO: find a way to handle when the user rejects transaction or it fails\r\n    } finally {\r\n      setPendingTx(false)\r\n    }\r\n  }, [onReward])\r\n\r\n  return (\r\n    <StyledFarmStakingCard>\r\n      <CardBody>\r\n        <Heading size=\"xl\" mb=\"24px\">\r\n          {TranslateString(542, 'Farms & Staking')}\r\n        </Heading>\r\n        <CardImage src=\"/images/cake.svg\" alt=\"cake logo\" width={64} height={64} />\r\n        <Block>\r\n          <Label>{TranslateString(544, '? to Harvest')}:</Label>\r\n          <CakeHarvestBalance />\r\n        </Block>\r\n        <Block>\r\n          <Label>{TranslateString(546, '? in Wallet')}:</Label>\r\n          <CakeWalletBalance />\r\n        </Block>\r\n        <Actions>\r\n          {account ? (\r\n            <Button\r\n              id=\"harvest-all\"\r\n              disabled={balancesWithValue.length <= 0 || pendingTx}\r\n              onClick={harvestAllFarms}\r\n              width=\"100%\"\r\n            >\r\n              {pendingTx\r\n                ? TranslateString(548, 'Collecting ?')\r\n                : TranslateString(532, `Harvest all (${balancesWithValue.length})`)}\r\n            </Button>\r\n          ) : (\r\n            <UnlockButton width=\"100%\" />\r\n          )}\r\n        </Actions>\r\n      </CardBody>\r\n    </StyledFarmStakingCard>\r\n  )\r\n}\r\n\r\nexport default FarmedStakingCard\r\n"]},"metadata":{},"sourceType":"module"}